{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTy_TNHH_THLA\\\\DuAn_Rac\\\\generator_qr_code\\\\src\\\\pages\\\\ConnecBluetooth.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnecBluetooth() {\n  _s();\n  const [weight, setWeight] = ueS(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [log, setLog] = useState([]);\n  const logMessage = msg => {\n    setLog(prev => [...prev, msg]);\n  };\n  const connectBluetooth = async () => {\n    try {\n      logMessage('üîç ƒêang t√¨m thi·∫øt b·ªã...');\n      const device = await navigator.bluetooth.requestDevice({\n        filters: [{\n          namePrefix: 'ESP'\n        }],\n        // ƒê·ªïi theo t√™n thi·∫øt b·ªã c·ªßa b·∫°n\n        optionalServices: ['0000ffe0-0000-1000-8000-00805f9b34fb'] // Service UUID t·ª´ ESP32\n      });\n      device.addEventListener('gattserverdisconnected', () => {\n        logMessage('üîå M·∫•t k·∫øt n·ªëi');\n        setIsConnected(false);\n      });\n      const server = await device.gatt.connect();\n      logMessage('‚úÖ ƒê√£ k·∫øt n·ªëi v·ªõi thi·∫øt b·ªã');\n      setIsConnected(true);\n      const service = await server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb');\n      const characteristic = await service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb');\n\n      // ƒêƒÉng k√Ω nh·∫≠n d·ªØ li·ªáu t·ª´ ESP32\n      await characteristic.startNotifications();\n      characteristic.addEventListener('characteristicvaluechanged', event => {\n        const value = new TextDecoder().decode(event.target.value);\n        logMessage(`üì¶ D·ªØ li·ªáu nh·∫≠n: ${value}`);\n        setWeight(value.trim());\n      });\n    } catch (error) {\n      console.error(error);\n      logMessage(`‚ùå L·ªói: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u2696\\uFE0F C\\xE2n Bluetooth (ESP32)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectBluetooth,\n      disabled: isConnected,\n      children: isConnected ? 'ƒê√£ k·∫øt n·ªëi' : 'K·∫øt n·ªëi Bluetooth'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), weight && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginTop: 20\n      },\n      children: [\"Tr\\u1ECDng l\\u01B0\\u1EE3ng: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: [weight, \" kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCC4 Log:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: log.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnecBluetooth, \"o2htW9IcfMiwrDdOOzT97FiAcCo=\");\n_c = ConnecBluetooth;\nexport default ConnecBluetooth;\nvar _c;\n$RefreshReg$(_c, \"ConnecBluetooth\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ConnecBluetooth","_s","weight","setWeight","ueS","isConnected","setIsConnected","useState","log","setLog","logMessage","msg","prev","connectBluetooth","device","navigator","bluetooth","requestDevice","filters","namePrefix","optionalServices","addEventListener","server","gatt","connect","service","getPrimaryService","characteristic","getCharacteristic","startNotifications","event","value","TextDecoder","decode","target","trim","error","console","message","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginTop","color","map","i","_c","$RefreshReg$"],"sources":["D:/CTy_TNHH_THLA/DuAn_Rac/generator_qr_code/src/pages/ConnecBluetooth.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction ConnecBluetooth() {\r\n    const [weight, setWeight] = ueS(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [log, setLog] = useState([]);\r\n\r\n  const logMessage = (msg) => {\r\n    setLog((prev) => [...prev, msg]);\r\n  };\r\n\r\n  const connectBluetooth = async () => {\r\n    try {\r\n      logMessage('üîç ƒêang t√¨m thi·∫øt b·ªã...');\r\n      const device = await navigator.bluetooth.requestDevice({\r\n        filters: [{ namePrefix: 'ESP' }], // ƒê·ªïi theo t√™n thi·∫øt b·ªã c·ªßa b·∫°n\r\n        optionalServices: ['0000ffe0-0000-1000-8000-00805f9b34fb'], // Service UUID t·ª´ ESP32\r\n      });\r\n\r\n      device.addEventListener('gattserverdisconnected', () => {\r\n        logMessage('üîå M·∫•t k·∫øt n·ªëi');\r\n        setIsConnected(false);\r\n      });\r\n\r\n      const server = await device.gatt.connect();\r\n      logMessage('‚úÖ ƒê√£ k·∫øt n·ªëi v·ªõi thi·∫øt b·ªã');\r\n      setIsConnected(true);\r\n\r\n      const service = await server.getPrimaryService('0000ffe0-0000-1000-8000-00805f9b34fb');\r\n      const characteristic = await service.getCharacteristic('0000ffe1-0000-1000-8000-00805f9b34fb');\r\n\r\n      // ƒêƒÉng k√Ω nh·∫≠n d·ªØ li·ªáu t·ª´ ESP32\r\n      await characteristic.startNotifications();\r\n      characteristic.addEventListener('characteristicvaluechanged', (event) => {\r\n        const value = new TextDecoder().decode(event.target.value);\r\n        logMessage(`üì¶ D·ªØ li·ªáu nh·∫≠n: ${value}`);\r\n        setWeight(value.trim());\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      logMessage(`‚ùå L·ªói: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\r\n      <h2>‚öñÔ∏è C√¢n Bluetooth (ESP32)</h2>\r\n      <button onClick={connectBluetooth} disabled={isConnected}>\r\n        {isConnected ? 'ƒê√£ k·∫øt n·ªëi' : 'K·∫øt n·ªëi Bluetooth'}\r\n      </button>\r\n\r\n      {weight && (\r\n        <h3 style={{ marginTop: 20 }}>Tr·ªçng l∆∞·ª£ng: <span style={{ color: 'green' }}>{weight} kg</span></h3>\r\n      )}\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <h4>üìÑ Log:</h4>\r\n        <ul>\r\n          {log.map((msg, i) => (\r\n            <li key={i}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnecBluetooth"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}