{"ast":null,"code":"!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define([], e) : \"object\" == typeof exports ? exports.QRCodeStyling = e() : t.QRCodeStyling = e();\n}(this, () => (() => {\n  var t = {\n      873: (t, e) => {\n        var i,\n          r,\n          n = function () {\n            var t = function (t, e) {\n              var i = t,\n                r = s[e],\n                n = null,\n                o = 0,\n                h = null,\n                p = [],\n                v = {},\n                m = function (t, e) {\n                  n = function (t) {\n                    for (var e = new Array(t), i = 0; i < t; i += 1) {\n                      e[i] = new Array(t);\n                      for (var r = 0; r < t; r += 1) e[i][r] = null;\n                    }\n                    return e;\n                  }(o = 4 * i + 17), b(0, 0), b(o - 7, 0), b(0, o - 7), x(), y(), C(t, e), i >= 7 && S(t), null == h && (h = M(i, r, p)), A(h, e);\n                },\n                b = function (t, e) {\n                  for (var i = -1; i <= 7; i += 1) if (!(t + i <= -1 || o <= t + i)) for (var r = -1; r <= 7; r += 1) e + r <= -1 || o <= e + r || (n[t + i][e + r] = 0 <= i && i <= 6 && (0 == r || 6 == r) || 0 <= r && r <= 6 && (0 == i || 6 == i) || 2 <= i && i <= 4 && 2 <= r && r <= 4);\n                },\n                y = function () {\n                  for (var t = 8; t < o - 8; t += 1) null == n[t][6] && (n[t][6] = t % 2 == 0);\n                  for (var e = 8; e < o - 8; e += 1) null == n[6][e] && (n[6][e] = e % 2 == 0);\n                },\n                x = function () {\n                  for (var t = a.getPatternPosition(i), e = 0; e < t.length; e += 1) for (var r = 0; r < t.length; r += 1) {\n                    var o = t[e],\n                      s = t[r];\n                    if (null == n[o][s]) for (var h = -2; h <= 2; h += 1) for (var d = -2; d <= 2; d += 1) n[o + h][s + d] = -2 == h || 2 == h || -2 == d || 2 == d || 0 == h && 0 == d;\n                  }\n                },\n                S = function (t) {\n                  for (var e = a.getBCHTypeNumber(i), r = 0; r < 18; r += 1) {\n                    var s = !t && 1 == (e >> r & 1);\n                    n[Math.floor(r / 3)][r % 3 + o - 8 - 3] = s;\n                  }\n                  for (r = 0; r < 18; r += 1) s = !t && 1 == (e >> r & 1), n[r % 3 + o - 8 - 3][Math.floor(r / 3)] = s;\n                },\n                C = function (t, e) {\n                  for (var i = r << 3 | e, s = a.getBCHTypeInfo(i), h = 0; h < 15; h += 1) {\n                    var d = !t && 1 == (s >> h & 1);\n                    h < 6 ? n[h][8] = d : h < 8 ? n[h + 1][8] = d : n[o - 15 + h][8] = d;\n                  }\n                  for (h = 0; h < 15; h += 1) d = !t && 1 == (s >> h & 1), h < 8 ? n[8][o - h - 1] = d : h < 9 ? n[8][15 - h - 1 + 1] = d : n[8][15 - h - 1] = d;\n                  n[o - 8][8] = !t;\n                },\n                A = function (t, e) {\n                  for (var i = -1, r = o - 1, s = 7, h = 0, d = a.getMaskFunction(e), u = o - 1; u > 0; u -= 2) for (6 == u && (u -= 1);;) {\n                    for (var c = 0; c < 2; c += 1) if (null == n[r][u - c]) {\n                      var l = !1;\n                      h < t.length && (l = 1 == (t[h] >>> s & 1)), d(r, u - c) && (l = !l), n[r][u - c] = l, -1 == (s -= 1) && (h += 1, s = 7);\n                    }\n                    if ((r += i) < 0 || o <= r) {\n                      r -= i, i = -i;\n                      break;\n                    }\n                  }\n                },\n                M = function (t, e, i) {\n                  for (var r = u.getRSBlocks(t, e), n = c(), o = 0; o < i.length; o += 1) {\n                    var s = i[o];\n                    n.put(s.getMode(), 4), n.put(s.getLength(), a.getLengthInBits(s.getMode(), t)), s.write(n);\n                  }\n                  var h = 0;\n                  for (o = 0; o < r.length; o += 1) h += r[o].dataCount;\n                  if (n.getLengthInBits() > 8 * h) throw \"code length overflow. (\" + n.getLengthInBits() + \">\" + 8 * h + \")\";\n                  for (n.getLengthInBits() + 4 <= 8 * h && n.put(0, 4); n.getLengthInBits() % 8 != 0;) n.putBit(!1);\n                  for (; !(n.getLengthInBits() >= 8 * h || (n.put(236, 8), n.getLengthInBits() >= 8 * h));) n.put(17, 8);\n                  return function (t, e) {\n                    for (var i = 0, r = 0, n = 0, o = new Array(e.length), s = new Array(e.length), h = 0; h < e.length; h += 1) {\n                      var u = e[h].dataCount,\n                        c = e[h].totalCount - u;\n                      r = Math.max(r, u), n = Math.max(n, c), o[h] = new Array(u);\n                      for (var l = 0; l < o[h].length; l += 1) o[h][l] = 255 & t.getBuffer()[l + i];\n                      i += u;\n                      var g = a.getErrorCorrectPolynomial(c),\n                        f = d(o[h], g.getLength() - 1).mod(g);\n                      for (s[h] = new Array(g.getLength() - 1), l = 0; l < s[h].length; l += 1) {\n                        var w = l + f.getLength() - s[h].length;\n                        s[h][l] = w >= 0 ? f.getAt(w) : 0;\n                      }\n                    }\n                    var p = 0;\n                    for (l = 0; l < e.length; l += 1) p += e[l].totalCount;\n                    var v = new Array(p),\n                      _ = 0;\n                    for (l = 0; l < r; l += 1) for (h = 0; h < e.length; h += 1) l < o[h].length && (v[_] = o[h][l], _ += 1);\n                    for (l = 0; l < n; l += 1) for (h = 0; h < e.length; h += 1) l < s[h].length && (v[_] = s[h][l], _ += 1);\n                    return v;\n                  }(n, r);\n                };\n              v.addData = function (t, e) {\n                var i = null;\n                switch (e = e || \"Byte\") {\n                  case \"Numeric\":\n                    i = l(t);\n                    break;\n                  case \"Alphanumeric\":\n                    i = g(t);\n                    break;\n                  case \"Byte\":\n                    i = f(t);\n                    break;\n                  case \"Kanji\":\n                    i = w(t);\n                    break;\n                  default:\n                    throw \"mode:\" + e;\n                }\n                p.push(i), h = null;\n              }, v.isDark = function (t, e) {\n                if (t < 0 || o <= t || e < 0 || o <= e) throw t + \",\" + e;\n                return n[t][e];\n              }, v.getModuleCount = function () {\n                return o;\n              }, v.make = function () {\n                if (i < 1) {\n                  for (var t = 1; t < 40; t++) {\n                    for (var e = u.getRSBlocks(t, r), n = c(), o = 0; o < p.length; o++) {\n                      var s = p[o];\n                      n.put(s.getMode(), 4), n.put(s.getLength(), a.getLengthInBits(s.getMode(), t)), s.write(n);\n                    }\n                    var h = 0;\n                    for (o = 0; o < e.length; o++) h += e[o].dataCount;\n                    if (n.getLengthInBits() <= 8 * h) break;\n                  }\n                  i = t;\n                }\n                m(!1, function () {\n                  for (var t = 0, e = 0, i = 0; i < 8; i += 1) {\n                    m(!0, i);\n                    var r = a.getLostPoint(v);\n                    (0 == i || t > r) && (t = r, e = i);\n                  }\n                  return e;\n                }());\n              }, v.createTableTag = function (t, e) {\n                t = t || 2;\n                var i = \"\";\n                i += '<table style=\"', i += \" border-width: 0px; border-style: none;\", i += \" border-collapse: collapse;\", i += \" padding: 0px; margin: \" + (e = void 0 === e ? 4 * t : e) + \"px;\", i += '\">', i += \"<tbody>\";\n                for (var r = 0; r < v.getModuleCount(); r += 1) {\n                  i += \"<tr>\";\n                  for (var n = 0; n < v.getModuleCount(); n += 1) i += '<td style=\"', i += \" border-width: 0px; border-style: none;\", i += \" border-collapse: collapse;\", i += \" padding: 0px; margin: 0px;\", i += \" width: \" + t + \"px;\", i += \" height: \" + t + \"px;\", i += \" background-color: \", i += v.isDark(r, n) ? \"#000000\" : \"#ffffff\", i += \";\", i += '\"/>';\n                  i += \"</tr>\";\n                }\n                return (i += \"</tbody>\") + \"</table>\";\n              }, v.createSvgTag = function (t, e, i, r) {\n                var n = {};\n                \"object\" == typeof arguments[0] && (t = (n = arguments[0]).cellSize, e = n.margin, i = n.alt, r = n.title), t = t || 2, e = void 0 === e ? 4 * t : e, (i = \"string\" == typeof i ? {\n                  text: i\n                } : i || {}).text = i.text || null, i.id = i.text ? i.id || \"qrcode-description\" : null, (r = \"string\" == typeof r ? {\n                  text: r\n                } : r || {}).text = r.text || null, r.id = r.text ? r.id || \"qrcode-title\" : null;\n                var o,\n                  s,\n                  a,\n                  h,\n                  d = v.getModuleCount() * t + 2 * e,\n                  u = \"\";\n                for (h = \"l\" + t + \",0 0,\" + t + \" -\" + t + \",0 0,-\" + t + \"z \", u += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"', u += n.scalable ? \"\" : ' width=\"' + d + 'px\" height=\"' + d + 'px\"', u += ' viewBox=\"0 0 ' + d + \" \" + d + '\" ', u += ' preserveAspectRatio=\"xMinYMin meet\"', u += r.text || i.text ? ' role=\"img\" aria-labelledby=\"' + $([r.id, i.id].join(\" \").trim()) + '\"' : \"\", u += \">\", u += r.text ? '<title id=\"' + $(r.id) + '\">' + $(r.text) + \"</title>\" : \"\", u += i.text ? '<description id=\"' + $(i.id) + '\">' + $(i.text) + \"</description>\" : \"\", u += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>', u += '<path d=\"', s = 0; s < v.getModuleCount(); s += 1) for (a = s * t + e, o = 0; o < v.getModuleCount(); o += 1) v.isDark(s, o) && (u += \"M\" + (o * t + e) + \",\" + a + h);\n                return (u += '\" stroke=\"transparent\" fill=\"black\"/>') + \"</svg>\";\n              }, v.createDataURL = function (t, e) {\n                t = t || 2, e = void 0 === e ? 4 * t : e;\n                var i = v.getModuleCount() * t + 2 * e,\n                  r = e,\n                  n = i - e;\n                return _(i, i, function (e, i) {\n                  if (r <= e && e < n && r <= i && i < n) {\n                    var o = Math.floor((e - r) / t),\n                      s = Math.floor((i - r) / t);\n                    return v.isDark(s, o) ? 0 : 1;\n                  }\n                  return 1;\n                });\n              }, v.createImgTag = function (t, e, i) {\n                t = t || 2, e = void 0 === e ? 4 * t : e;\n                var r = v.getModuleCount() * t + 2 * e,\n                  n = \"\";\n                return n += \"<img\", n += ' src=\"', n += v.createDataURL(t, e), n += '\"', n += ' width=\"', n += r, n += '\"', n += ' height=\"', n += r, n += '\"', i && (n += ' alt=\"', n += $(i), n += '\"'), n + \"/>\";\n              };\n              var $ = function (t) {\n                for (var e = \"\", i = 0; i < t.length; i += 1) {\n                  var r = t.charAt(i);\n                  switch (r) {\n                    case \"<\":\n                      e += \"&lt;\";\n                      break;\n                    case \">\":\n                      e += \"&gt;\";\n                      break;\n                    case \"&\":\n                      e += \"&amp;\";\n                      break;\n                    case '\"':\n                      e += \"&quot;\";\n                      break;\n                    default:\n                      e += r;\n                  }\n                }\n                return e;\n              };\n              return v.createASCII = function (t, e) {\n                if ((t = t || 1) < 2) return function (t) {\n                  t = void 0 === t ? 2 : t;\n                  var e,\n                    i,\n                    r,\n                    n,\n                    o,\n                    s = 1 * v.getModuleCount() + 2 * t,\n                    a = t,\n                    h = s - t,\n                    d = {\n                      \"██\": \"█\",\n                      \"█ \": \"▀\",\n                      \" █\": \"▄\",\n                      \"  \": \" \"\n                    },\n                    u = {\n                      \"██\": \"▀\",\n                      \"█ \": \"▀\",\n                      \" █\": \" \",\n                      \"  \": \" \"\n                    },\n                    c = \"\";\n                  for (e = 0; e < s; e += 2) {\n                    for (r = Math.floor((e - a) / 1), n = Math.floor((e + 1 - a) / 1), i = 0; i < s; i += 1) o = \"█\", a <= i && i < h && a <= e && e < h && v.isDark(r, Math.floor((i - a) / 1)) && (o = \" \"), a <= i && i < h && a <= e + 1 && e + 1 < h && v.isDark(n, Math.floor((i - a) / 1)) ? o += \" \" : o += \"█\", c += t < 1 && e + 1 >= h ? u[o] : d[o];\n                    c += \"\\n\";\n                  }\n                  return s % 2 && t > 0 ? c.substring(0, c.length - s - 1) + Array(s + 1).join(\"▀\") : c.substring(0, c.length - 1);\n                }(e);\n                t -= 1, e = void 0 === e ? 2 * t : e;\n                var i,\n                  r,\n                  n,\n                  o,\n                  s = v.getModuleCount() * t + 2 * e,\n                  a = e,\n                  h = s - e,\n                  d = Array(t + 1).join(\"██\"),\n                  u = Array(t + 1).join(\"  \"),\n                  c = \"\",\n                  l = \"\";\n                for (i = 0; i < s; i += 1) {\n                  for (n = Math.floor((i - a) / t), l = \"\", r = 0; r < s; r += 1) o = 1, a <= r && r < h && a <= i && i < h && v.isDark(n, Math.floor((r - a) / t)) && (o = 0), l += o ? d : u;\n                  for (n = 0; n < t; n += 1) c += l + \"\\n\";\n                }\n                return c.substring(0, c.length - 1);\n              }, v.renderTo2dContext = function (t, e) {\n                e = e || 2;\n                for (var i = v.getModuleCount(), r = 0; r < i; r++) for (var n = 0; n < i; n++) t.fillStyle = v.isDark(r, n) ? \"black\" : \"white\", t.fillRect(r * e, n * e, e, e);\n              }, v;\n            };\n            t.stringToBytes = (t.stringToBytesFuncs = {\n              default: function (t) {\n                for (var e = [], i = 0; i < t.length; i += 1) {\n                  var r = t.charCodeAt(i);\n                  e.push(255 & r);\n                }\n                return e;\n              }\n            }).default, t.createStringToBytes = function (t, e) {\n              var i = function () {\n                  for (var i = v(t), r = function () {\n                      var t = i.read();\n                      if (-1 == t) throw \"eof\";\n                      return t;\n                    }, n = 0, o = {};;) {\n                    var s = i.read();\n                    if (-1 == s) break;\n                    var a = r(),\n                      h = r() << 8 | r();\n                    o[String.fromCharCode(s << 8 | a)] = h, n += 1;\n                  }\n                  if (n != e) throw n + \" != \" + e;\n                  return o;\n                }(),\n                r = \"?\".charCodeAt(0);\n              return function (t) {\n                for (var e = [], n = 0; n < t.length; n += 1) {\n                  var o = t.charCodeAt(n);\n                  if (o < 128) e.push(o);else {\n                    var s = i[t.charAt(n)];\n                    \"number\" == typeof s ? (255 & s) == s ? e.push(s) : (e.push(s >>> 8), e.push(255 & s)) : e.push(r);\n                  }\n                }\n                return e;\n              };\n            };\n            var e,\n              i,\n              r,\n              n,\n              o,\n              s = {\n                L: 1,\n                M: 0,\n                Q: 3,\n                H: 2\n              },\n              a = (e = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]], i = 1335, r = 7973, o = function (t) {\n                for (var e = 0; 0 != t;) e += 1, t >>>= 1;\n                return e;\n              }, (n = {}).getBCHTypeInfo = function (t) {\n                for (var e = t << 10; o(e) - o(i) >= 0;) e ^= i << o(e) - o(i);\n                return 21522 ^ (t << 10 | e);\n              }, n.getBCHTypeNumber = function (t) {\n                for (var e = t << 12; o(e) - o(r) >= 0;) e ^= r << o(e) - o(r);\n                return t << 12 | e;\n              }, n.getPatternPosition = function (t) {\n                return e[t - 1];\n              }, n.getMaskFunction = function (t) {\n                switch (t) {\n                  case 0:\n                    return function (t, e) {\n                      return (t + e) % 2 == 0;\n                    };\n                  case 1:\n                    return function (t, e) {\n                      return t % 2 == 0;\n                    };\n                  case 2:\n                    return function (t, e) {\n                      return e % 3 == 0;\n                    };\n                  case 3:\n                    return function (t, e) {\n                      return (t + e) % 3 == 0;\n                    };\n                  case 4:\n                    return function (t, e) {\n                      return (Math.floor(t / 2) + Math.floor(e / 3)) % 2 == 0;\n                    };\n                  case 5:\n                    return function (t, e) {\n                      return t * e % 2 + t * e % 3 == 0;\n                    };\n                  case 6:\n                    return function (t, e) {\n                      return (t * e % 2 + t * e % 3) % 2 == 0;\n                    };\n                  case 7:\n                    return function (t, e) {\n                      return (t * e % 3 + (t + e) % 2) % 2 == 0;\n                    };\n                  default:\n                    throw \"bad maskPattern:\" + t;\n                }\n              }, n.getErrorCorrectPolynomial = function (t) {\n                for (var e = d([1], 0), i = 0; i < t; i += 1) e = e.multiply(d([1, h.gexp(i)], 0));\n                return e;\n              }, n.getLengthInBits = function (t, e) {\n                if (1 <= e && e < 10) switch (t) {\n                  case 1:\n                    return 10;\n                  case 2:\n                    return 9;\n                  case 4:\n                  case 8:\n                    return 8;\n                  default:\n                    throw \"mode:\" + t;\n                } else if (e < 27) switch (t) {\n                  case 1:\n                    return 12;\n                  case 2:\n                    return 11;\n                  case 4:\n                    return 16;\n                  case 8:\n                    return 10;\n                  default:\n                    throw \"mode:\" + t;\n                } else {\n                  if (!(e < 41)) throw \"type:\" + e;\n                  switch (t) {\n                    case 1:\n                      return 14;\n                    case 2:\n                      return 13;\n                    case 4:\n                      return 16;\n                    case 8:\n                      return 12;\n                    default:\n                      throw \"mode:\" + t;\n                  }\n                }\n              }, n.getLostPoint = function (t) {\n                for (var e = t.getModuleCount(), i = 0, r = 0; r < e; r += 1) for (var n = 0; n < e; n += 1) {\n                  for (var o = 0, s = t.isDark(r, n), a = -1; a <= 1; a += 1) if (!(r + a < 0 || e <= r + a)) for (var h = -1; h <= 1; h += 1) n + h < 0 || e <= n + h || 0 == a && 0 == h || s == t.isDark(r + a, n + h) && (o += 1);\n                  o > 5 && (i += 3 + o - 5);\n                }\n                for (r = 0; r < e - 1; r += 1) for (n = 0; n < e - 1; n += 1) {\n                  var d = 0;\n                  t.isDark(r, n) && (d += 1), t.isDark(r + 1, n) && (d += 1), t.isDark(r, n + 1) && (d += 1), t.isDark(r + 1, n + 1) && (d += 1), 0 != d && 4 != d || (i += 3);\n                }\n                for (r = 0; r < e; r += 1) for (n = 0; n < e - 6; n += 1) t.isDark(r, n) && !t.isDark(r, n + 1) && t.isDark(r, n + 2) && t.isDark(r, n + 3) && t.isDark(r, n + 4) && !t.isDark(r, n + 5) && t.isDark(r, n + 6) && (i += 40);\n                for (n = 0; n < e; n += 1) for (r = 0; r < e - 6; r += 1) t.isDark(r, n) && !t.isDark(r + 1, n) && t.isDark(r + 2, n) && t.isDark(r + 3, n) && t.isDark(r + 4, n) && !t.isDark(r + 5, n) && t.isDark(r + 6, n) && (i += 40);\n                var u = 0;\n                for (n = 0; n < e; n += 1) for (r = 0; r < e; r += 1) t.isDark(r, n) && (u += 1);\n                return i + Math.abs(100 * u / e / e - 50) / 5 * 10;\n              }, n),\n              h = function () {\n                for (var t = new Array(256), e = new Array(256), i = 0; i < 8; i += 1) t[i] = 1 << i;\n                for (i = 8; i < 256; i += 1) t[i] = t[i - 4] ^ t[i - 5] ^ t[i - 6] ^ t[i - 8];\n                for (i = 0; i < 255; i += 1) e[t[i]] = i;\n                return {\n                  glog: function (t) {\n                    if (t < 1) throw \"glog(\" + t + \")\";\n                    return e[t];\n                  },\n                  gexp: function (e) {\n                    for (; e < 0;) e += 255;\n                    for (; e >= 256;) e -= 255;\n                    return t[e];\n                  }\n                };\n              }();\n            function d(t, e) {\n              if (void 0 === t.length) throw t.length + \"/\" + e;\n              var i = function () {\n                  for (var i = 0; i < t.length && 0 == t[i];) i += 1;\n                  for (var r = new Array(t.length - i + e), n = 0; n < t.length - i; n += 1) r[n] = t[n + i];\n                  return r;\n                }(),\n                r = {\n                  getAt: function (t) {\n                    return i[t];\n                  },\n                  getLength: function () {\n                    return i.length;\n                  },\n                  multiply: function (t) {\n                    for (var e = new Array(r.getLength() + t.getLength() - 1), i = 0; i < r.getLength(); i += 1) for (var n = 0; n < t.getLength(); n += 1) e[i + n] ^= h.gexp(h.glog(r.getAt(i)) + h.glog(t.getAt(n)));\n                    return d(e, 0);\n                  },\n                  mod: function (t) {\n                    if (r.getLength() - t.getLength() < 0) return r;\n                    for (var e = h.glog(r.getAt(0)) - h.glog(t.getAt(0)), i = new Array(r.getLength()), n = 0; n < r.getLength(); n += 1) i[n] = r.getAt(n);\n                    for (n = 0; n < t.getLength(); n += 1) i[n] ^= h.gexp(h.glog(t.getAt(n)) + e);\n                    return d(i, 0).mod(t);\n                  }\n                };\n              return r;\n            }\n            var u = function () {\n                var t = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]],\n                  e = function (t, e) {\n                    var i = {};\n                    return i.totalCount = t, i.dataCount = e, i;\n                  },\n                  i = {\n                    getRSBlocks: function (i, r) {\n                      var n = function (e, i) {\n                        switch (i) {\n                          case s.L:\n                            return t[4 * (e - 1) + 0];\n                          case s.M:\n                            return t[4 * (e - 1) + 1];\n                          case s.Q:\n                            return t[4 * (e - 1) + 2];\n                          case s.H:\n                            return t[4 * (e - 1) + 3];\n                          default:\n                            return;\n                        }\n                      }(i, r);\n                      if (void 0 === n) throw \"bad rs block @ typeNumber:\" + i + \"/errorCorrectionLevel:\" + r;\n                      for (var o = n.length / 3, a = [], h = 0; h < o; h += 1) for (var d = n[3 * h + 0], u = n[3 * h + 1], c = n[3 * h + 2], l = 0; l < d; l += 1) a.push(e(u, c));\n                      return a;\n                    }\n                  };\n                return i;\n              }(),\n              c = function () {\n                var t = [],\n                  e = 0,\n                  i = {\n                    getBuffer: function () {\n                      return t;\n                    },\n                    getAt: function (e) {\n                      var i = Math.floor(e / 8);\n                      return 1 == (t[i] >>> 7 - e % 8 & 1);\n                    },\n                    put: function (t, e) {\n                      for (var r = 0; r < e; r += 1) i.putBit(1 == (t >>> e - r - 1 & 1));\n                    },\n                    getLengthInBits: function () {\n                      return e;\n                    },\n                    putBit: function (i) {\n                      var r = Math.floor(e / 8);\n                      t.length <= r && t.push(0), i && (t[r] |= 128 >>> e % 8), e += 1;\n                    }\n                  };\n                return i;\n              },\n              l = function (t) {\n                var e = t,\n                  i = {\n                    getMode: function () {\n                      return 1;\n                    },\n                    getLength: function (t) {\n                      return e.length;\n                    },\n                    write: function (t) {\n                      for (var i = e, n = 0; n + 2 < i.length;) t.put(r(i.substring(n, n + 3)), 10), n += 3;\n                      n < i.length && (i.length - n == 1 ? t.put(r(i.substring(n, n + 1)), 4) : i.length - n == 2 && t.put(r(i.substring(n, n + 2)), 7));\n                    }\n                  },\n                  r = function (t) {\n                    for (var e = 0, i = 0; i < t.length; i += 1) e = 10 * e + n(t.charAt(i));\n                    return e;\n                  },\n                  n = function (t) {\n                    if (\"0\" <= t && t <= \"9\") return t.charCodeAt(0) - \"0\".charCodeAt(0);\n                    throw \"illegal char :\" + t;\n                  };\n                return i;\n              },\n              g = function (t) {\n                var e = t,\n                  i = {\n                    getMode: function () {\n                      return 2;\n                    },\n                    getLength: function (t) {\n                      return e.length;\n                    },\n                    write: function (t) {\n                      for (var i = e, n = 0; n + 1 < i.length;) t.put(45 * r(i.charAt(n)) + r(i.charAt(n + 1)), 11), n += 2;\n                      n < i.length && t.put(r(i.charAt(n)), 6);\n                    }\n                  },\n                  r = function (t) {\n                    if (\"0\" <= t && t <= \"9\") return t.charCodeAt(0) - \"0\".charCodeAt(0);\n                    if (\"A\" <= t && t <= \"Z\") return t.charCodeAt(0) - \"A\".charCodeAt(0) + 10;\n                    switch (t) {\n                      case \" \":\n                        return 36;\n                      case \"$\":\n                        return 37;\n                      case \"%\":\n                        return 38;\n                      case \"*\":\n                        return 39;\n                      case \"+\":\n                        return 40;\n                      case \"-\":\n                        return 41;\n                      case \".\":\n                        return 42;\n                      case \"/\":\n                        return 43;\n                      case \":\":\n                        return 44;\n                      default:\n                        throw \"illegal char :\" + t;\n                    }\n                  };\n                return i;\n              },\n              f = function (e) {\n                var i = t.stringToBytes(e);\n                return {\n                  getMode: function () {\n                    return 4;\n                  },\n                  getLength: function (t) {\n                    return i.length;\n                  },\n                  write: function (t) {\n                    for (var e = 0; e < i.length; e += 1) t.put(i[e], 8);\n                  }\n                };\n              },\n              w = function (e) {\n                var i = t.stringToBytesFuncs.SJIS;\n                if (!i) throw \"sjis not supported.\";\n                !function () {\n                  var t = i(\"友\");\n                  if (2 != t.length || 38726 != (t[0] << 8 | t[1])) throw \"sjis not supported.\";\n                }();\n                var r = i(e),\n                  n = {\n                    getMode: function () {\n                      return 8;\n                    },\n                    getLength: function (t) {\n                      return ~~(r.length / 2);\n                    },\n                    write: function (t) {\n                      for (var e = r, i = 0; i + 1 < e.length;) {\n                        var n = (255 & e[i]) << 8 | 255 & e[i + 1];\n                        if (33088 <= n && n <= 40956) n -= 33088;else {\n                          if (!(57408 <= n && n <= 60351)) throw \"illegal char at \" + (i + 1) + \"/\" + n;\n                          n -= 49472;\n                        }\n                        n = 192 * (n >>> 8 & 255) + (255 & n), t.put(n, 13), i += 2;\n                      }\n                      if (i < e.length) throw \"illegal char at \" + (i + 1);\n                    }\n                  };\n                return n;\n              },\n              p = function () {\n                var t = [],\n                  e = {\n                    writeByte: function (e) {\n                      t.push(255 & e);\n                    },\n                    writeShort: function (t) {\n                      e.writeByte(t), e.writeByte(t >>> 8);\n                    },\n                    writeBytes: function (t, i, r) {\n                      i = i || 0, r = r || t.length;\n                      for (var n = 0; n < r; n += 1) e.writeByte(t[n + i]);\n                    },\n                    writeString: function (t) {\n                      for (var i = 0; i < t.length; i += 1) e.writeByte(t.charCodeAt(i));\n                    },\n                    toByteArray: function () {\n                      return t;\n                    },\n                    toString: function () {\n                      var e = \"\";\n                      e += \"[\";\n                      for (var i = 0; i < t.length; i += 1) i > 0 && (e += \",\"), e += t[i];\n                      return e + \"]\";\n                    }\n                  };\n                return e;\n              },\n              v = function (t) {\n                var e = t,\n                  i = 0,\n                  r = 0,\n                  n = 0,\n                  o = {\n                    read: function () {\n                      for (; n < 8;) {\n                        if (i >= e.length) {\n                          if (0 == n) return -1;\n                          throw \"unexpected end of file./\" + n;\n                        }\n                        var t = e.charAt(i);\n                        if (i += 1, \"=\" == t) return n = 0, -1;\n                        t.match(/^\\s$/) || (r = r << 6 | s(t.charCodeAt(0)), n += 6);\n                      }\n                      var o = r >>> n - 8 & 255;\n                      return n -= 8, o;\n                    }\n                  },\n                  s = function (t) {\n                    if (65 <= t && t <= 90) return t - 65;\n                    if (97 <= t && t <= 122) return t - 97 + 26;\n                    if (48 <= t && t <= 57) return t - 48 + 52;\n                    if (43 == t) return 62;\n                    if (47 == t) return 63;\n                    throw \"c:\" + t;\n                  };\n                return o;\n              },\n              _ = function (t, e, i) {\n                for (var r = function (t, e) {\n                    var i = t,\n                      r = e,\n                      n = new Array(t * e),\n                      o = {\n                        setPixel: function (t, e, r) {\n                          n[e * i + t] = r;\n                        },\n                        write: function (t) {\n                          t.writeString(\"GIF87a\"), t.writeShort(i), t.writeShort(r), t.writeByte(128), t.writeByte(0), t.writeByte(0), t.writeByte(0), t.writeByte(0), t.writeByte(0), t.writeByte(255), t.writeByte(255), t.writeByte(255), t.writeString(\",\"), t.writeShort(0), t.writeShort(0), t.writeShort(i), t.writeShort(r), t.writeByte(0);\n                          var e = s(2);\n                          t.writeByte(2);\n                          for (var n = 0; e.length - n > 255;) t.writeByte(255), t.writeBytes(e, n, 255), n += 255;\n                          t.writeByte(e.length - n), t.writeBytes(e, n, e.length - n), t.writeByte(0), t.writeString(\";\");\n                        }\n                      },\n                      s = function (t) {\n                        for (var e = 1 << t, i = 1 + (1 << t), r = t + 1, o = a(), s = 0; s < e; s += 1) o.add(String.fromCharCode(s));\n                        o.add(String.fromCharCode(e)), o.add(String.fromCharCode(i));\n                        var h,\n                          d,\n                          u,\n                          c = p(),\n                          l = (h = c, d = 0, u = 0, {\n                            write: function (t, e) {\n                              if (t >>> e != 0) throw \"length over\";\n                              for (; d + e >= 8;) h.writeByte(255 & (t << d | u)), e -= 8 - d, t >>>= 8 - d, u = 0, d = 0;\n                              u |= t << d, d += e;\n                            },\n                            flush: function () {\n                              d > 0 && h.writeByte(u);\n                            }\n                          });\n                        l.write(e, r);\n                        var g = 0,\n                          f = String.fromCharCode(n[g]);\n                        for (g += 1; g < n.length;) {\n                          var w = String.fromCharCode(n[g]);\n                          g += 1, o.contains(f + w) ? f += w : (l.write(o.indexOf(f), r), o.size() < 4095 && (o.size() == 1 << r && (r += 1), o.add(f + w)), f = w);\n                        }\n                        return l.write(o.indexOf(f), r), l.write(i, r), l.flush(), c.toByteArray();\n                      },\n                      a = function () {\n                        var t = {},\n                          e = 0,\n                          i = {\n                            add: function (r) {\n                              if (i.contains(r)) throw \"dup key:\" + r;\n                              t[r] = e, e += 1;\n                            },\n                            size: function () {\n                              return e;\n                            },\n                            indexOf: function (e) {\n                              return t[e];\n                            },\n                            contains: function (e) {\n                              return void 0 !== t[e];\n                            }\n                          };\n                        return i;\n                      };\n                    return o;\n                  }(t, e), n = 0; n < e; n += 1) for (var o = 0; o < t; o += 1) r.setPixel(o, n, i(o, n));\n                var s = p();\n                r.write(s);\n                for (var a = function () {\n                    var t = 0,\n                      e = 0,\n                      i = 0,\n                      r = \"\",\n                      n = {},\n                      o = function (t) {\n                        r += String.fromCharCode(s(63 & t));\n                      },\n                      s = function (t) {\n                        if (t < 0) ;else {\n                          if (t < 26) return 65 + t;\n                          if (t < 52) return t - 26 + 97;\n                          if (t < 62) return t - 52 + 48;\n                          if (62 == t) return 43;\n                          if (63 == t) return 47;\n                        }\n                        throw \"n:\" + t;\n                      };\n                    return n.writeByte = function (r) {\n                      for (t = t << 8 | 255 & r, e += 8, i += 1; e >= 6;) o(t >>> e - 6), e -= 6;\n                    }, n.flush = function () {\n                      if (e > 0 && (o(t << 6 - e), t = 0, e = 0), i % 3 != 0) for (var n = 3 - i % 3, s = 0; s < n; s += 1) r += \"=\";\n                    }, n.toString = function () {\n                      return r;\n                    }, n;\n                  }(), h = s.toByteArray(), d = 0; d < h.length; d += 1) a.writeByte(h[d]);\n                return a.flush(), \"data:image/gif;base64,\" + a;\n              };\n            return t;\n          }();\n        n.stringToBytesFuncs[\"UTF-8\"] = function (t) {\n          return function (t) {\n            for (var e = [], i = 0; i < t.length; i++) {\n              var r = t.charCodeAt(i);\n              r < 128 ? e.push(r) : r < 2048 ? e.push(192 | r >> 6, 128 | 63 & r) : r < 55296 || r >= 57344 ? e.push(224 | r >> 12, 128 | r >> 6 & 63, 128 | 63 & r) : (i++, r = 65536 + ((1023 & r) << 10 | 1023 & t.charCodeAt(i)), e.push(240 | r >> 18, 128 | r >> 12 & 63, 128 | r >> 6 & 63, 128 | 63 & r));\n            }\n            return e;\n          }(t);\n        }, void 0 === (r = \"function\" == typeof (i = function () {\n          return n;\n        }) ? i.apply(e, []) : i) || (t.exports = r);\n      }\n    },\n    e = {};\n  function i(r) {\n    var n = e[r];\n    if (void 0 !== n) return n.exports;\n    var o = e[r] = {\n      exports: {}\n    };\n    return t[r](o, o.exports, i), o.exports;\n  }\n  i.n = t => {\n    var e = t && t.__esModule ? () => t.default : () => t;\n    return i.d(e, {\n      a: e\n    }), e;\n  }, i.d = (t, e) => {\n    for (var r in e) i.o(e, r) && !i.o(t, r) && Object.defineProperty(t, r, {\n      enumerable: !0,\n      get: e[r]\n    });\n  }, i.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e);\n  var r = {};\n  return (() => {\n    \"use strict\";\n\n    i.d(r, {\n      default: () => $\n    });\n    const t = t => !!t && \"object\" == typeof t && !Array.isArray(t);\n    function e(i, ...r) {\n      if (!r.length) return i;\n      const n = r.shift();\n      return void 0 !== n && t(i) && t(n) ? (i = Object.assign({}, i), Object.keys(n).forEach(r => {\n        const o = i[r],\n          s = n[r];\n        Array.isArray(o) && Array.isArray(s) ? i[r] = s : t(o) && t(s) ? i[r] = e(Object.assign({}, o), s) : i[r] = s;\n      }), e(i, ...r)) : i;\n    }\n    function n(t, e) {\n      const i = document.createElement(\"a\");\n      i.download = e, i.href = t, document.body.appendChild(i), i.click(), document.body.removeChild(i);\n    }\n    const o = {\n      L: .07,\n      M: .15,\n      Q: .25,\n      H: .3\n    };\n    class s {\n      constructor({\n        svg: t,\n        type: e,\n        window: i\n      }) {\n        this._svg = t, this._type = e, this._window = i;\n      }\n      draw(t, e, i, r) {\n        let n;\n        switch (this._type) {\n          case \"dots\":\n            n = this._drawDot;\n            break;\n          case \"classy\":\n            n = this._drawClassy;\n            break;\n          case \"classy-rounded\":\n            n = this._drawClassyRounded;\n            break;\n          case \"rounded\":\n            n = this._drawRounded;\n            break;\n          case \"extra-rounded\":\n            n = this._drawExtraRounded;\n            break;\n          default:\n            n = this._drawSquare;\n        }\n        n.call(this, {\n          x: t,\n          y: e,\n          size: i,\n          getNeighbor: r\n        });\n      }\n      _rotateFigure({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r = 0,\n        draw: n\n      }) {\n        var o;\n        const s = t + i / 2,\n          a = e + i / 2;\n        n(), null === (o = this._element) || void 0 === o || o.setAttribute(\"transform\", `rotate(${180 * r / Math.PI},${s},${a})`);\n      }\n      _basicDot(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\"), this._element.setAttribute(\"cx\", String(i + e / 2)), this._element.setAttribute(\"cy\", String(r + e / 2)), this._element.setAttribute(\"r\", String(e / 2));\n          }\n        }));\n      }\n      _basicSquare(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"), this._element.setAttribute(\"x\", String(i)), this._element.setAttribute(\"y\", String(r)), this._element.setAttribute(\"width\", String(e)), this._element.setAttribute(\"height\", String(e));\n          }\n        }));\n      }\n      _basicSideRounded(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"d\", `M ${i} ${r}v ${e}h ` + e / 2 + `a ${e / 2} ${e / 2}, 0, 0, 0, 0 ${-e}`);\n          }\n        }));\n      }\n      _basicCornerRounded(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"d\", `M ${i} ${r}v ${e}h ${e}v ` + -e / 2 + `a ${e / 2} ${e / 2}, 0, 0, 0, ${-e / 2} ${-e / 2}`);\n          }\n        }));\n      }\n      _basicCornerExtraRounded(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"d\", `M ${i} ${r}v ${e}h ${e}a ${e} ${e}, 0, 0, 0, ${-e} ${-e}`);\n          }\n        }));\n      }\n      _basicCornersRounded(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"d\", `M ${i} ${r}v ` + e / 2 + `a ${e / 2} ${e / 2}, 0, 0, 0, ${e / 2} ${e / 2}h ` + e / 2 + \"v \" + -e / 2 + `a ${e / 2} ${e / 2}, 0, 0, 0, ${-e / 2} ${-e / 2}`);\n          }\n        }));\n      }\n      _drawDot({\n        x: t,\n        y: e,\n        size: i\n      }) {\n        this._basicDot({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        });\n      }\n      _drawSquare({\n        x: t,\n        y: e,\n        size: i\n      }) {\n        this._basicSquare({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        });\n      }\n      _drawRounded({\n        x: t,\n        y: e,\n        size: i,\n        getNeighbor: r\n      }) {\n        const n = r ? +r(-1, 0) : 0,\n          o = r ? +r(1, 0) : 0,\n          s = r ? +r(0, -1) : 0,\n          a = r ? +r(0, 1) : 0,\n          h = n + o + s + a;\n        if (0 !== h) {\n          if (h > 2 || n && o || s && a) this._basicSquare({\n            x: t,\n            y: e,\n            size: i,\n            rotation: 0\n          });else {\n            if (2 === h) {\n              let r = 0;\n              return n && s ? r = Math.PI / 2 : s && o ? r = Math.PI : o && a && (r = -Math.PI / 2), void this._basicCornerRounded({\n                x: t,\n                y: e,\n                size: i,\n                rotation: r\n              });\n            }\n            if (1 === h) {\n              let r = 0;\n              return s ? r = Math.PI / 2 : o ? r = Math.PI : a && (r = -Math.PI / 2), void this._basicSideRounded({\n                x: t,\n                y: e,\n                size: i,\n                rotation: r\n              });\n            }\n          }\n        } else this._basicDot({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        });\n      }\n      _drawExtraRounded({\n        x: t,\n        y: e,\n        size: i,\n        getNeighbor: r\n      }) {\n        const n = r ? +r(-1, 0) : 0,\n          o = r ? +r(1, 0) : 0,\n          s = r ? +r(0, -1) : 0,\n          a = r ? +r(0, 1) : 0,\n          h = n + o + s + a;\n        if (0 !== h) {\n          if (h > 2 || n && o || s && a) this._basicSquare({\n            x: t,\n            y: e,\n            size: i,\n            rotation: 0\n          });else {\n            if (2 === h) {\n              let r = 0;\n              return n && s ? r = Math.PI / 2 : s && o ? r = Math.PI : o && a && (r = -Math.PI / 2), void this._basicCornerExtraRounded({\n                x: t,\n                y: e,\n                size: i,\n                rotation: r\n              });\n            }\n            if (1 === h) {\n              let r = 0;\n              return s ? r = Math.PI / 2 : o ? r = Math.PI : a && (r = -Math.PI / 2), void this._basicSideRounded({\n                x: t,\n                y: e,\n                size: i,\n                rotation: r\n              });\n            }\n          }\n        } else this._basicDot({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        });\n      }\n      _drawClassy({\n        x: t,\n        y: e,\n        size: i,\n        getNeighbor: r\n      }) {\n        const n = r ? +r(-1, 0) : 0,\n          o = r ? +r(1, 0) : 0,\n          s = r ? +r(0, -1) : 0,\n          a = r ? +r(0, 1) : 0;\n        0 !== n + o + s + a ? n || s ? o || a ? this._basicSquare({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        }) : this._basicCornerRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: Math.PI / 2\n        }) : this._basicCornerRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: -Math.PI / 2\n        }) : this._basicCornersRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: Math.PI / 2\n        });\n      }\n      _drawClassyRounded({\n        x: t,\n        y: e,\n        size: i,\n        getNeighbor: r\n      }) {\n        const n = r ? +r(-1, 0) : 0,\n          o = r ? +r(1, 0) : 0,\n          s = r ? +r(0, -1) : 0,\n          a = r ? +r(0, 1) : 0;\n        0 !== n + o + s + a ? n || s ? o || a ? this._basicSquare({\n          x: t,\n          y: e,\n          size: i,\n          rotation: 0\n        }) : this._basicCornerExtraRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: Math.PI / 2\n        }) : this._basicCornerExtraRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: -Math.PI / 2\n        }) : this._basicCornersRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: Math.PI / 2\n        });\n      }\n    }\n    const a = {\n        dot: \"dot\",\n        square: \"square\",\n        extraRounded: \"extra-rounded\"\n      },\n      h = Object.values(a);\n    class d {\n      constructor({\n        svg: t,\n        type: e,\n        window: i\n      }) {\n        this._svg = t, this._type = e, this._window = i;\n      }\n      draw(t, e, i, r) {\n        let n;\n        switch (this._type) {\n          case a.square:\n            n = this._drawSquare;\n            break;\n          case a.extraRounded:\n            n = this._drawExtraRounded;\n            break;\n          default:\n            n = this._drawDot;\n        }\n        n.call(this, {\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n      _rotateFigure({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r = 0,\n        draw: n\n      }) {\n        var o;\n        const s = t + i / 2,\n          a = e + i / 2;\n        n(), null === (o = this._element) || void 0 === o || o.setAttribute(\"transform\", `rotate(${180 * r / Math.PI},${s},${a})`);\n      }\n      _basicDot(t) {\n        const {\n            size: e,\n            x: i,\n            y: r\n          } = t,\n          n = e / 7;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"clip-rule\", \"evenodd\"), this._element.setAttribute(\"d\", `M ${i + e / 2} ${r}a ${e / 2} ${e / 2} 0 1 0 0.1 0zm 0 ${n}a ${e / 2 - n} ${e / 2 - n} 0 1 1 -0.1 0Z`);\n          }\n        }));\n      }\n      _basicSquare(t) {\n        const {\n            size: e,\n            x: i,\n            y: r\n          } = t,\n          n = e / 7;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"clip-rule\", \"evenodd\"), this._element.setAttribute(\"d\", `M ${i} ${r}v ${e}h ${e}v ` + -e + \"z\" + `M ${i + n} ${r + n}h ` + (e - 2 * n) + \"v \" + (e - 2 * n) + \"h \" + (2 * n - e) + \"z\");\n          }\n        }));\n      }\n      _basicExtraRounded(t) {\n        const {\n            size: e,\n            x: i,\n            y: r\n          } = t,\n          n = e / 7;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"), this._element.setAttribute(\"clip-rule\", \"evenodd\"), this._element.setAttribute(\"d\", `M ${i} ${r + 2.5 * n}v ` + 2 * n + `a ${2.5 * n} ${2.5 * n}, 0, 0, 0, ${2.5 * n} ${2.5 * n}h ` + 2 * n + `a ${2.5 * n} ${2.5 * n}, 0, 0, 0, ${2.5 * n} ${2.5 * -n}v ` + -2 * n + `a ${2.5 * n} ${2.5 * n}, 0, 0, 0, ${2.5 * -n} ${2.5 * -n}h ` + -2 * n + `a ${2.5 * n} ${2.5 * n}, 0, 0, 0, ${2.5 * -n} ${2.5 * n}` + `M ${i + 2.5 * n} ${r + n}h ` + 2 * n + `a ${1.5 * n} ${1.5 * n}, 0, 0, 1, ${1.5 * n} ${1.5 * n}v ` + 2 * n + `a ${1.5 * n} ${1.5 * n}, 0, 0, 1, ${1.5 * -n} ${1.5 * n}h ` + -2 * n + `a ${1.5 * n} ${1.5 * n}, 0, 0, 1, ${1.5 * -n} ${1.5 * -n}v ` + -2 * n + `a ${1.5 * n} ${1.5 * n}, 0, 0, 1, ${1.5 * n} ${1.5 * -n}`);\n          }\n        }));\n      }\n      _drawDot({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r\n      }) {\n        this._basicDot({\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n      _drawSquare({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r\n      }) {\n        this._basicSquare({\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n      _drawExtraRounded({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r\n      }) {\n        this._basicExtraRounded({\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n    }\n    const u = {\n        dot: \"dot\",\n        square: \"square\"\n      },\n      c = Object.values(u);\n    class l {\n      constructor({\n        svg: t,\n        type: e,\n        window: i\n      }) {\n        this._svg = t, this._type = e, this._window = i;\n      }\n      draw(t, e, i, r) {\n        let n;\n        n = this._type === u.square ? this._drawSquare : this._drawDot, n.call(this, {\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n      _rotateFigure({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r = 0,\n        draw: n\n      }) {\n        var o;\n        const s = t + i / 2,\n          a = e + i / 2;\n        n(), null === (o = this._element) || void 0 === o || o.setAttribute(\"transform\", `rotate(${180 * r / Math.PI},${s},${a})`);\n      }\n      _basicDot(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\"), this._element.setAttribute(\"cx\", String(i + e / 2)), this._element.setAttribute(\"cy\", String(r + e / 2)), this._element.setAttribute(\"r\", String(e / 2));\n          }\n        }));\n      }\n      _basicSquare(t) {\n        const {\n          size: e,\n          x: i,\n          y: r\n        } = t;\n        this._rotateFigure(Object.assign(Object.assign({}, t), {\n          draw: () => {\n            this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"), this._element.setAttribute(\"x\", String(i)), this._element.setAttribute(\"y\", String(r)), this._element.setAttribute(\"width\", String(e)), this._element.setAttribute(\"height\", String(e));\n          }\n        }));\n      }\n      _drawDot({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r\n      }) {\n        this._basicDot({\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n      _drawSquare({\n        x: t,\n        y: e,\n        size: i,\n        rotation: r\n      }) {\n        this._basicSquare({\n          x: t,\n          y: e,\n          size: i,\n          rotation: r\n        });\n      }\n    }\n    const g = \"circle\",\n      f = [[1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1]],\n      w = [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]];\n    class p {\n      constructor(t, e) {\n        this._roundSize = t => this._options.dotsOptions.roundSize ? Math.floor(t) : t, this._window = e, this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\"), this._element.setAttribute(\"width\", String(t.width)), this._element.setAttribute(\"height\", String(t.height)), this._element.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\"), t.dotsOptions.roundSize || this._element.setAttribute(\"shape-rendering\", \"crispEdges\"), this._element.setAttribute(\"viewBox\", `0 0 ${t.width} ${t.height}`), this._defs = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\"), this._element.appendChild(this._defs), this._imageUri = t.image, this._instanceId = p.instanceCount++, this._options = t;\n      }\n      get width() {\n        return this._options.width;\n      }\n      get height() {\n        return this._options.height;\n      }\n      getElement() {\n        return this._element;\n      }\n      async drawQR(t) {\n        const e = t.getModuleCount(),\n          i = Math.min(this._options.width, this._options.height) - 2 * this._options.margin,\n          r = this._options.shape === g ? i / Math.sqrt(2) : i,\n          n = this._roundSize(r / e);\n        let s = {\n          hideXDots: 0,\n          hideYDots: 0,\n          width: 0,\n          height: 0\n        };\n        if (this._qr = t, this._options.image) {\n          if (await this.loadImage(), !this._image) return;\n          const {\n              imageOptions: t,\n              qrOptions: i\n            } = this._options,\n            r = t.imageSize * o[i.errorCorrectionLevel],\n            a = Math.floor(r * e * e);\n          s = function ({\n            originalHeight: t,\n            originalWidth: e,\n            maxHiddenDots: i,\n            maxHiddenAxisDots: r,\n            dotSize: n\n          }) {\n            const o = {\n                x: 0,\n                y: 0\n              },\n              s = {\n                x: 0,\n                y: 0\n              };\n            if (t <= 0 || e <= 0 || i <= 0 || n <= 0) return {\n              height: 0,\n              width: 0,\n              hideYDots: 0,\n              hideXDots: 0\n            };\n            const a = t / e;\n            return o.x = Math.floor(Math.sqrt(i / a)), o.x <= 0 && (o.x = 1), r && r < o.x && (o.x = r), o.x % 2 == 0 && o.x--, s.x = o.x * n, o.y = 1 + 2 * Math.ceil((o.x * a - 1) / 2), s.y = Math.round(s.x * a), (o.y * o.x > i || r && r < o.y) && (r && r < o.y ? (o.y = r, o.y % 2 == 0 && o.x--) : o.y -= 2, s.y = o.y * n, o.x = 1 + 2 * Math.ceil((o.y / a - 1) / 2), s.x = Math.round(s.y / a)), {\n              height: s.y,\n              width: s.x,\n              hideYDots: o.y,\n              hideXDots: o.x\n            };\n          }({\n            originalWidth: this._image.width,\n            originalHeight: this._image.height,\n            maxHiddenDots: a,\n            maxHiddenAxisDots: e - 14,\n            dotSize: n\n          });\n        }\n        this.drawBackground(), this.drawDots((t, i) => {\n          var r, n, o, a, h, d;\n          return !(this._options.imageOptions.hideBackgroundDots && t >= (e - s.hideYDots) / 2 && t < (e + s.hideYDots) / 2 && i >= (e - s.hideXDots) / 2 && i < (e + s.hideXDots) / 2 || (null === (r = f[t]) || void 0 === r ? void 0 : r[i]) || (null === (n = f[t - e + 7]) || void 0 === n ? void 0 : n[i]) || (null === (o = f[t]) || void 0 === o ? void 0 : o[i - e + 7]) || (null === (a = w[t]) || void 0 === a ? void 0 : a[i]) || (null === (h = w[t - e + 7]) || void 0 === h ? void 0 : h[i]) || (null === (d = w[t]) || void 0 === d ? void 0 : d[i - e + 7]));\n        }), this.drawCorners(), this._options.image && (await this.drawImage({\n          width: s.width,\n          height: s.height,\n          count: e,\n          dotSize: n\n        }));\n      }\n      drawBackground() {\n        var t, e, i;\n        const r = this._element,\n          n = this._options;\n        if (r) {\n          const r = null === (t = n.backgroundOptions) || void 0 === t ? void 0 : t.gradient,\n            o = null === (e = n.backgroundOptions) || void 0 === e ? void 0 : e.color;\n          let s = n.height,\n            a = n.width;\n          if (r || o) {\n            const t = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            this._backgroundClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\"), this._backgroundClipPath.setAttribute(\"id\", `clip-path-background-color-${this._instanceId}`), this._defs.appendChild(this._backgroundClipPath), (null === (i = n.backgroundOptions) || void 0 === i ? void 0 : i.round) && (s = a = Math.min(n.width, n.height), t.setAttribute(\"rx\", String(s / 2 * n.backgroundOptions.round))), t.setAttribute(\"x\", String(this._roundSize((n.width - a) / 2))), t.setAttribute(\"y\", String(this._roundSize((n.height - s) / 2))), t.setAttribute(\"width\", String(a)), t.setAttribute(\"height\", String(s)), this._backgroundClipPath.appendChild(t), this._createColor({\n              options: r,\n              color: o,\n              additionalRotation: 0,\n              x: 0,\n              y: 0,\n              height: n.height,\n              width: n.width,\n              name: `background-color-${this._instanceId}`\n            });\n          }\n        }\n      }\n      drawDots(t) {\n        var e, i;\n        if (!this._qr) throw \"QR code is not defined\";\n        const r = this._options,\n          n = this._qr.getModuleCount();\n        if (n > r.width || n > r.height) throw \"The canvas is too small.\";\n        const o = Math.min(r.width, r.height) - 2 * r.margin,\n          a = r.shape === g ? o / Math.sqrt(2) : o,\n          h = this._roundSize(a / n),\n          d = this._roundSize((r.width - n * h) / 2),\n          u = this._roundSize((r.height - n * h) / 2),\n          c = new s({\n            svg: this._element,\n            type: r.dotsOptions.type,\n            window: this._window\n          });\n        this._dotsClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\"), this._dotsClipPath.setAttribute(\"id\", `clip-path-dot-color-${this._instanceId}`), this._defs.appendChild(this._dotsClipPath), this._createColor({\n          options: null === (e = r.dotsOptions) || void 0 === e ? void 0 : e.gradient,\n          color: r.dotsOptions.color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: r.height,\n          width: r.width,\n          name: `dot-color-${this._instanceId}`\n        });\n        for (let e = 0; e < n; e++) for (let r = 0; r < n; r++) t && !t(e, r) || (null === (i = this._qr) || void 0 === i ? void 0 : i.isDark(e, r)) && (c.draw(d + r * h, u + e * h, h, (i, o) => !(r + i < 0 || e + o < 0 || r + i >= n || e + o >= n) && !(t && !t(e + o, r + i)) && !!this._qr && this._qr.isDark(e + o, r + i)), c._element && this._dotsClipPath && this._dotsClipPath.appendChild(c._element));\n        if (r.shape === g) {\n          const t = this._roundSize((o / h - n) / 2),\n            e = n + 2 * t,\n            i = d - t * h,\n            r = u - t * h,\n            s = [],\n            a = this._roundSize(e / 2);\n          for (let i = 0; i < e; i++) {\n            s[i] = [];\n            for (let r = 0; r < e; r++) i >= t - 1 && i <= e - t && r >= t - 1 && r <= e - t || Math.sqrt((i - a) * (i - a) + (r - a) * (r - a)) > a ? s[i][r] = 0 : s[i][r] = this._qr.isDark(r - 2 * t < 0 ? r : r >= n ? r - 2 * t : r - t, i - 2 * t < 0 ? i : i >= n ? i - 2 * t : i - t) ? 1 : 0;\n          }\n          for (let t = 0; t < e; t++) for (let n = 0; n < e; n++) s[t][n] && (c.draw(i + n * h, r + t * h, h, (e, i) => {\n            var r;\n            return !!(null === (r = s[t + i]) || void 0 === r ? void 0 : r[n + e]);\n          }), c._element && this._dotsClipPath && this._dotsClipPath.appendChild(c._element));\n        }\n      }\n      drawCorners() {\n        if (!this._qr) throw \"QR code is not defined\";\n        const t = this._element,\n          e = this._options;\n        if (!t) throw \"Element code is not defined\";\n        const i = this._qr.getModuleCount(),\n          r = Math.min(e.width, e.height) - 2 * e.margin,\n          n = e.shape === g ? r / Math.sqrt(2) : r,\n          o = this._roundSize(n / i),\n          a = 7 * o,\n          u = 3 * o,\n          p = this._roundSize((e.width - i * o) / 2),\n          v = this._roundSize((e.height - i * o) / 2);\n        [[0, 0, 0], [1, 0, Math.PI / 2], [0, 1, -Math.PI / 2]].forEach(([t, r, n]) => {\n          var g, _, m, b, y, x, S, C, A, M, $, O, D, k;\n          const z = p + t * o * (i - 7),\n            B = v + r * o * (i - 7);\n          let P = this._dotsClipPath,\n            I = this._dotsClipPath;\n          if (((null === (g = e.cornersSquareOptions) || void 0 === g ? void 0 : g.gradient) || (null === (_ = e.cornersSquareOptions) || void 0 === _ ? void 0 : _.color)) && (P = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\"), P.setAttribute(\"id\", `clip-path-corners-square-color-${t}-${r}-${this._instanceId}`), this._defs.appendChild(P), this._cornersSquareClipPath = this._cornersDotClipPath = I = P, this._createColor({\n            options: null === (m = e.cornersSquareOptions) || void 0 === m ? void 0 : m.gradient,\n            color: null === (b = e.cornersSquareOptions) || void 0 === b ? void 0 : b.color,\n            additionalRotation: n,\n            x: z,\n            y: B,\n            height: a,\n            width: a,\n            name: `corners-square-color-${t}-${r}-${this._instanceId}`\n          })), (null === (y = e.cornersSquareOptions) || void 0 === y ? void 0 : y.type) && h.includes(e.cornersSquareOptions.type)) {\n            const t = new d({\n              svg: this._element,\n              type: e.cornersSquareOptions.type,\n              window: this._window\n            });\n            t.draw(z, B, a, n), t._element && P && P.appendChild(t._element);\n          } else {\n            const t = new s({\n              svg: this._element,\n              type: (null === (x = e.cornersSquareOptions) || void 0 === x ? void 0 : x.type) || e.dotsOptions.type,\n              window: this._window\n            });\n            for (let e = 0; e < f.length; e++) for (let i = 0; i < f[e].length; i++) (null === (S = f[e]) || void 0 === S ? void 0 : S[i]) && (t.draw(z + i * o, B + e * o, o, (t, r) => {\n              var n;\n              return !!(null === (n = f[e + r]) || void 0 === n ? void 0 : n[i + t]);\n            }), t._element && P && P.appendChild(t._element));\n          }\n          if (((null === (C = e.cornersDotOptions) || void 0 === C ? void 0 : C.gradient) || (null === (A = e.cornersDotOptions) || void 0 === A ? void 0 : A.color)) && (I = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\"), I.setAttribute(\"id\", `clip-path-corners-dot-color-${t}-${r}-${this._instanceId}`), this._defs.appendChild(I), this._cornersDotClipPath = I, this._createColor({\n            options: null === (M = e.cornersDotOptions) || void 0 === M ? void 0 : M.gradient,\n            color: null === ($ = e.cornersDotOptions) || void 0 === $ ? void 0 : $.color,\n            additionalRotation: n,\n            x: z + 2 * o,\n            y: B + 2 * o,\n            height: u,\n            width: u,\n            name: `corners-dot-color-${t}-${r}-${this._instanceId}`\n          })), (null === (O = e.cornersDotOptions) || void 0 === O ? void 0 : O.type) && c.includes(e.cornersDotOptions.type)) {\n            const t = new l({\n              svg: this._element,\n              type: e.cornersDotOptions.type,\n              window: this._window\n            });\n            t.draw(z + 2 * o, B + 2 * o, u, n), t._element && I && I.appendChild(t._element);\n          } else {\n            const t = new s({\n              svg: this._element,\n              type: (null === (D = e.cornersDotOptions) || void 0 === D ? void 0 : D.type) || e.dotsOptions.type,\n              window: this._window\n            });\n            for (let e = 0; e < w.length; e++) for (let i = 0; i < w[e].length; i++) (null === (k = w[e]) || void 0 === k ? void 0 : k[i]) && (t.draw(z + i * o, B + e * o, o, (t, r) => {\n              var n;\n              return !!(null === (n = w[e + r]) || void 0 === n ? void 0 : n[i + t]);\n            }), t._element && I && I.appendChild(t._element));\n          }\n        });\n      }\n      loadImage() {\n        return new Promise((t, e) => {\n          var i;\n          const r = this._options;\n          if (!r.image) return e(\"Image is not defined\");\n          if (null === (i = r.nodeCanvas) || void 0 === i ? void 0 : i.loadImage) r.nodeCanvas.loadImage(r.image).then(e => {\n            var i, n;\n            if (this._image = e, this._options.imageOptions.saveAsBlob) {\n              const t = null === (i = r.nodeCanvas) || void 0 === i ? void 0 : i.createCanvas(this._image.width, this._image.height);\n              null === (n = null == t ? void 0 : t.getContext(\"2d\")) || void 0 === n || n.drawImage(e, 0, 0), this._imageUri = null == t ? void 0 : t.toDataURL();\n            }\n            t();\n          }).catch(e);else {\n            const e = new this._window.Image();\n            \"string\" == typeof r.imageOptions.crossOrigin && (e.crossOrigin = r.imageOptions.crossOrigin), this._image = e, e.onload = async () => {\n              this._options.imageOptions.saveAsBlob && (this._imageUri = await async function (t, e) {\n                return new Promise(i => {\n                  const r = new e.XMLHttpRequest();\n                  r.onload = function () {\n                    const t = new e.FileReader();\n                    t.onloadend = function () {\n                      i(t.result);\n                    }, t.readAsDataURL(r.response);\n                  }, r.open(\"GET\", t), r.responseType = \"blob\", r.send();\n                });\n              }(r.image || \"\", this._window)), t();\n            }, e.src = r.image;\n          }\n        });\n      }\n      async drawImage({\n        width: t,\n        height: e,\n        count: i,\n        dotSize: r\n      }) {\n        const n = this._options,\n          o = this._roundSize((n.width - i * r) / 2),\n          s = this._roundSize((n.height - i * r) / 2),\n          a = o + this._roundSize(n.imageOptions.margin + (i * r - t) / 2),\n          h = s + this._roundSize(n.imageOptions.margin + (i * r - e) / 2),\n          d = t - 2 * n.imageOptions.margin,\n          u = e - 2 * n.imageOptions.margin,\n          c = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n        c.setAttribute(\"href\", this._imageUri || \"\"), c.setAttribute(\"xlink:href\", this._imageUri || \"\"), c.setAttribute(\"x\", String(a)), c.setAttribute(\"y\", String(h)), c.setAttribute(\"width\", `${d}px`), c.setAttribute(\"height\", `${u}px`), this._element.appendChild(c);\n      }\n      _createColor({\n        options: t,\n        color: e,\n        additionalRotation: i,\n        x: r,\n        y: n,\n        height: o,\n        width: s,\n        name: a\n      }) {\n        const h = s > o ? s : o,\n          d = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        if (d.setAttribute(\"x\", String(r)), d.setAttribute(\"y\", String(n)), d.setAttribute(\"height\", String(o)), d.setAttribute(\"width\", String(s)), d.setAttribute(\"clip-path\", `url('#clip-path-${a}')`), t) {\n          let e;\n          if (\"radial\" === t.type) e = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\"), e.setAttribute(\"id\", a), e.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), e.setAttribute(\"fx\", String(r + s / 2)), e.setAttribute(\"fy\", String(n + o / 2)), e.setAttribute(\"cx\", String(r + s / 2)), e.setAttribute(\"cy\", String(n + o / 2)), e.setAttribute(\"r\", String(h / 2));else {\n            const h = ((t.rotation || 0) + i) % (2 * Math.PI),\n              d = (h + 2 * Math.PI) % (2 * Math.PI);\n            let u = r + s / 2,\n              c = n + o / 2,\n              l = r + s / 2,\n              g = n + o / 2;\n            d >= 0 && d <= .25 * Math.PI || d > 1.75 * Math.PI && d <= 2 * Math.PI ? (u -= s / 2, c -= o / 2 * Math.tan(h), l += s / 2, g += o / 2 * Math.tan(h)) : d > .25 * Math.PI && d <= .75 * Math.PI ? (c -= o / 2, u -= s / 2 / Math.tan(h), g += o / 2, l += s / 2 / Math.tan(h)) : d > .75 * Math.PI && d <= 1.25 * Math.PI ? (u += s / 2, c += o / 2 * Math.tan(h), l -= s / 2, g -= o / 2 * Math.tan(h)) : d > 1.25 * Math.PI && d <= 1.75 * Math.PI && (c += o / 2, u += s / 2 / Math.tan(h), g -= o / 2, l -= s / 2 / Math.tan(h)), e = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\"), e.setAttribute(\"id\", a), e.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), e.setAttribute(\"x1\", String(Math.round(u))), e.setAttribute(\"y1\", String(Math.round(c))), e.setAttribute(\"x2\", String(Math.round(l))), e.setAttribute(\"y2\", String(Math.round(g)));\n          }\n          t.colorStops.forEach(({\n            offset: t,\n            color: i\n          }) => {\n            const r = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n            r.setAttribute(\"offset\", 100 * t + \"%\"), r.setAttribute(\"stop-color\", i), e.appendChild(r);\n          }), d.setAttribute(\"fill\", `url('#${a}')`), this._defs.appendChild(e);\n        } else e && d.setAttribute(\"fill\", e);\n        this._element.appendChild(d);\n      }\n    }\n    p.instanceCount = 0;\n    const v = p,\n      _ = \"canvas\",\n      m = {};\n    for (let t = 0; t <= 40; t++) m[t] = t;\n    const b = {\n      type: _,\n      shape: \"square\",\n      width: 300,\n      height: 300,\n      data: \"\",\n      margin: 0,\n      qrOptions: {\n        typeNumber: m[0],\n        mode: void 0,\n        errorCorrectionLevel: \"Q\"\n      },\n      imageOptions: {\n        saveAsBlob: !0,\n        hideBackgroundDots: !0,\n        imageSize: .4,\n        crossOrigin: void 0,\n        margin: 0\n      },\n      dotsOptions: {\n        type: \"square\",\n        color: \"#000\",\n        roundSize: !0\n      },\n      backgroundOptions: {\n        round: 0,\n        color: \"#fff\"\n      }\n    };\n    function y(t) {\n      const e = Object.assign({}, t);\n      if (!e.colorStops || !e.colorStops.length) throw \"Field 'colorStops' is required in gradient\";\n      return e.rotation ? e.rotation = Number(e.rotation) : e.rotation = 0, e.colorStops = e.colorStops.map(t => Object.assign(Object.assign({}, t), {\n        offset: Number(t.offset)\n      })), e;\n    }\n    function x(t) {\n      const e = Object.assign({}, t);\n      return e.width = Number(e.width), e.height = Number(e.height), e.margin = Number(e.margin), e.imageOptions = Object.assign(Object.assign({}, e.imageOptions), {\n        hideBackgroundDots: Boolean(e.imageOptions.hideBackgroundDots),\n        imageSize: Number(e.imageOptions.imageSize),\n        margin: Number(e.imageOptions.margin)\n      }), e.margin > Math.min(e.width, e.height) && (e.margin = Math.min(e.width, e.height)), e.dotsOptions = Object.assign({}, e.dotsOptions), e.dotsOptions.gradient && (e.dotsOptions.gradient = y(e.dotsOptions.gradient)), e.cornersSquareOptions && (e.cornersSquareOptions = Object.assign({}, e.cornersSquareOptions), e.cornersSquareOptions.gradient && (e.cornersSquareOptions.gradient = y(e.cornersSquareOptions.gradient))), e.cornersDotOptions && (e.cornersDotOptions = Object.assign({}, e.cornersDotOptions), e.cornersDotOptions.gradient && (e.cornersDotOptions.gradient = y(e.cornersDotOptions.gradient))), e.backgroundOptions && (e.backgroundOptions = Object.assign({}, e.backgroundOptions), e.backgroundOptions.gradient && (e.backgroundOptions.gradient = y(e.backgroundOptions.gradient))), e;\n    }\n    var S = i(873),\n      C = i.n(S);\n    function A(t) {\n      if (!t) throw new Error(\"Extension must be defined\");\n      \".\" === t[0] && (t = t.substring(1));\n      const e = {\n        bmp: \"image/bmp\",\n        gif: \"image/gif\",\n        ico: \"image/vnd.microsoft.icon\",\n        jpeg: \"image/jpeg\",\n        jpg: \"image/jpeg\",\n        png: \"image/png\",\n        svg: \"image/svg+xml\",\n        tif: \"image/tiff\",\n        tiff: \"image/tiff\",\n        webp: \"image/webp\",\n        pdf: \"application/pdf\"\n      }[t.toLowerCase()];\n      if (!e) throw new Error(`Extension \"${t}\" is not supported`);\n      return e;\n    }\n    class M {\n      constructor(t) {\n        (null == t ? void 0 : t.jsdom) ? this._window = new t.jsdom(\"\", {\n          resources: \"usable\"\n        }).window : this._window = window, this._options = t ? x(e(b, t)) : b, this.update();\n      }\n      static _clearContainer(t) {\n        t && (t.innerHTML = \"\");\n      }\n      _setupSvg() {\n        if (!this._qr) return;\n        const t = new v(this._options, this._window);\n        this._svg = t.getElement(), this._svgDrawingPromise = t.drawQR(this._qr).then(() => {\n          var e;\n          this._svg && (null === (e = this._extension) || void 0 === e || e.call(this, t.getElement(), this._options));\n        });\n      }\n      _setupCanvas() {\n        var t, e;\n        this._qr && ((null === (t = this._options.nodeCanvas) || void 0 === t ? void 0 : t.createCanvas) ? (this._nodeCanvas = this._options.nodeCanvas.createCanvas(this._options.width, this._options.height), this._nodeCanvas.width = this._options.width, this._nodeCanvas.height = this._options.height) : (this._domCanvas = document.createElement(\"canvas\"), this._domCanvas.width = this._options.width, this._domCanvas.height = this._options.height), this._setupSvg(), this._canvasDrawingPromise = null === (e = this._svgDrawingPromise) || void 0 === e ? void 0 : e.then(() => {\n          var t;\n          if (!this._svg) return;\n          const e = this._svg,\n            i = new this._window.XMLSerializer().serializeToString(e),\n            r = btoa(i),\n            n = `data:${A(\"svg\")};base64,${r}`;\n          if (null === (t = this._options.nodeCanvas) || void 0 === t ? void 0 : t.loadImage) return this._options.nodeCanvas.loadImage(n).then(t => {\n            var e, i;\n            t.width = this._options.width, t.height = this._options.height, null === (i = null === (e = this._nodeCanvas) || void 0 === e ? void 0 : e.getContext(\"2d\")) || void 0 === i || i.drawImage(t, 0, 0);\n          });\n          {\n            const t = new this._window.Image();\n            return new Promise(e => {\n              t.onload = () => {\n                var i, r;\n                null === (r = null === (i = this._domCanvas) || void 0 === i ? void 0 : i.getContext(\"2d\")) || void 0 === r || r.drawImage(t, 0, 0), e();\n              }, t.src = n;\n            });\n          }\n        }));\n      }\n      async _getElement(t = \"png\") {\n        if (!this._qr) throw \"QR code is empty\";\n        return \"svg\" === t.toLowerCase() ? (this._svg && this._svgDrawingPromise || this._setupSvg(), await this._svgDrawingPromise, this._svg) : ((this._domCanvas || this._nodeCanvas) && this._canvasDrawingPromise || this._setupCanvas(), await this._canvasDrawingPromise, this._domCanvas || this._nodeCanvas);\n      }\n      update(t) {\n        M._clearContainer(this._container), this._options = t ? x(e(this._options, t)) : this._options, this._options.data && (this._qr = C()(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel), this._qr.addData(this._options.data, this._options.qrOptions.mode || function (t) {\n          switch (!0) {\n            case /^[0-9]*$/.test(t):\n              return \"Numeric\";\n            case /^[0-9A-Z $%*+\\-./:]*$/.test(t):\n              return \"Alphanumeric\";\n            default:\n              return \"Byte\";\n          }\n        }(this._options.data)), this._qr.make(), this._options.type === _ ? this._setupCanvas() : this._setupSvg(), this.append(this._container));\n      }\n      append(t) {\n        if (t) {\n          if (\"function\" != typeof t.appendChild) throw \"Container should be a single DOM node\";\n          this._options.type === _ ? this._domCanvas && t.appendChild(this._domCanvas) : this._svg && t.appendChild(this._svg), this._container = t;\n        }\n      }\n      applyExtension(t) {\n        if (!t) throw \"Extension function should be defined.\";\n        this._extension = t, this.update();\n      }\n      deleteExtension() {\n        this._extension = void 0, this.update();\n      }\n      async getRawData(t = \"png\") {\n        if (!this._qr) throw \"QR code is empty\";\n        const e = await this._getElement(t),\n          i = A(t);\n        if (!e) return null;\n        if (\"svg\" === t.toLowerCase()) {\n          const t = `<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n${new this._window.XMLSerializer().serializeToString(e)}`;\n          return \"undefined\" == typeof Blob || this._options.jsdom ? Buffer.from(t) : new Blob([t], {\n            type: i\n          });\n        }\n        return new Promise(t => {\n          const r = e;\n          if (\"toBuffer\" in r) {\n            if (\"image/png\" === i) t(r.toBuffer(i));else if (\"image/jpeg\" === i) t(r.toBuffer(i));else {\n              if (\"application/pdf\" !== i) throw Error(\"Unsupported extension\");\n              t(r.toBuffer(i));\n            }\n          } else \"toBlob\" in r && r.toBlob(t, i, 1);\n        });\n      }\n      async download(t) {\n        if (!this._qr) throw \"QR code is empty\";\n        if (\"undefined\" == typeof Blob) throw \"Cannot download in Node.js, call getRawData instead.\";\n        let e = \"png\",\n          i = \"qr\";\n        \"string\" == typeof t ? (e = t, console.warn(\"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\")) : \"object\" == typeof t && null !== t && (t.name && (i = t.name), t.extension && (e = t.extension));\n        const r = await this._getElement(e);\n        if (r) if (\"svg\" === e.toLowerCase()) {\n          let t = new XMLSerializer().serializeToString(r);\n          t = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + t, n(`data:${A(e)};charset=utf-8,${encodeURIComponent(t)}`, `${i}.svg`);\n        } else n(r.toDataURL(A(e)), `${i}.${e}`);\n      }\n    }\n    const $ = M;\n  })(), r.default;\n})());","map":{"version":3,"names":["t","e","exports","module","define","amd","QRCodeStyling","i","r","n","qrcode","s","o","h","p","v","m","makeImpl","Array","b","x","y","C","S","M","A","setupPositionProbePattern","setupTimingPattern","setupPositionAdjustPattern","a","getPatternPosition","length","d","setupTypeNumber","getBCHTypeNumber","Math","floor","setupTypeInfo","getBCHTypeInfo","mapData","getMaskFunction","u","c","l","createData","getRSBlocks","put","getMode","getLength","getLengthInBits","write","dataCount","putBit","totalCount","max","getBuffer","g","getErrorCorrectPolynomial","f","mod","w","getAt","_","addData","push","isDark","getModuleCount","make","getLostPoint","createTableTag","createSvgTag","arguments","cellSize","margin","alt","title","text","id","scalable","$","join","trim","createDataURL","createImgTag","escapeXml","charAt","createASCII","substring","renderTo2dContext","fillStyle","fillRect","stringToBytes","stringToBytesFuncs","default","charCodeAt","createStringToBytes","read","String","fromCharCode","L","Q","H","getBCHDigit","multiply","gexp","abs","glog","_this","qrRSBlock","qrBitBuffer","qrNumber","strToNum","chatToNum","qrAlphaNum","getCode","qr8BitByte","qrKanji","SJIS","byteArrayOutputStream","writeByte","writeShort","writeBytes","writeString","toByteArray","toString","base64DecodeInputStream","match","decode","setPixel","getLZWRaster","add","flush","contains","indexOf","size","lzwTable","writeEncoded","encode","apply","__esModule","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","isArray","shift","assign","keys","forEach","document","createElement","download","href","body","appendChild","click","removeChild","constructor","svg","type","window","_svg","_type","_window","draw","_drawDot","_drawClassy","_drawClassyRounded","_drawRounded","_drawExtraRounded","_drawSquare","getNeighbor","_rotateFigure","rotation","_element","setAttribute","PI","_basicDot","createElementNS","_basicSquare","_basicSideRounded","_basicCornerRounded","_basicCornerExtraRounded","_basicCornersRounded","dot","square","extraRounded","values","_basicExtraRounded","_roundSize","_options","dotsOptions","roundSize","width","height","_defs","_imageUri","image","_instanceId","instanceCount","getElement","drawQR","min","shape","sqrt","hideXDots","hideYDots","_qr","loadImage","_image","imageOptions","qrOptions","imageSize","errorCorrectionLevel","originalHeight","originalWidth","maxHiddenDots","maxHiddenAxisDots","dotSize","ceil","round","drawBackground","drawDots","hideBackgroundDots","drawCorners","drawImage","count","backgroundOptions","gradient","color","_backgroundClipPath","_createColor","options","additionalRotation","name","_dotsClipPath","z","B","P","I","cornersSquareOptions","_cornersSquareClipPath","_cornersDotClipPath","includes","cornersDotOptions","O","D","k","Promise","nodeCanvas","then","saveAsBlob","createCanvas","getContext","toDataURL","catch","Image","crossOrigin","onload","XMLHttpRequest","FileReader","onloadend","result","readAsDataURL","response","open","responseType","send","src","tan","colorStops","offset","data","typeNumber","mode","Number","map","Boolean","Error","bmp","gif","ico","jpeg","jpg","png","tif","tiff","webp","pdf","toLowerCase","jsdom","resources","update","_clearContainer","innerHTML","_setupSvg","_svgDrawingPromise","_extension","_setupCanvas","_nodeCanvas","_domCanvas","_canvasDrawingPromise","XMLSerializer","serializeToString","btoa","_getElement","_container","test","append","applyExtension","deleteExtension","getRawData","Blob","Buffer","from","toBuffer","toBlob","console","warn","extension","encodeURIComponent"],"sources":["webpack://QRCodeStyling/webpack/universalModuleDefinition","webpack://QRCodeStyling/node_modules/qrcode-generator/qrcode.js","webpack://QRCodeStyling/webpack/bootstrap","webpack://QRCodeStyling/webpack/runtime/compat get default export","webpack://QRCodeStyling/webpack/runtime/define property getters","webpack://QRCodeStyling/webpack/runtime/hasOwnProperty shorthand","webpack://QRCodeStyling/src/constants/modes.ts","webpack://QRCodeStyling/src/tools/merge.ts","webpack://QRCodeStyling/src/tools/downloadURI.ts","webpack://QRCodeStyling/src/constants/errorCorrectionPercents.ts","webpack://QRCodeStyling/src/figures/dot/QRDot.ts","webpack://QRCodeStyling/src/constants/dotTypes.ts","webpack://QRCodeStyling/src/constants/cornerSquareTypes.ts","webpack://QRCodeStyling/src/figures/cornerSquare/QRCornerSquare.ts","webpack://QRCodeStyling/src/constants/cornerDotTypes.ts","webpack://QRCodeStyling/src/figures/cornerDot/QRCornerDot.ts","webpack://QRCodeStyling/src/constants/gradientTypes.ts","webpack://QRCodeStyling/src/constants/shapeTypes.ts","webpack://QRCodeStyling/src/core/QRSVG.ts","webpack://QRCodeStyling/src/tools/calculateImageSize.ts","webpack://QRCodeStyling/src/tools/toDataUrl.ts","webpack://QRCodeStyling/src/constants/drawTypes.ts","webpack://QRCodeStyling/src/constants/qrTypes.ts","webpack://QRCodeStyling/src/core/QROptions.ts","webpack://QRCodeStyling/src/constants/errorCorrectionLevels.ts","webpack://QRCodeStyling/src/tools/sanitizeOptions.ts","webpack://QRCodeStyling/src/tools/getMimeType.ts","webpack://QRCodeStyling/src/core/QRCodeStyling.ts","webpack://QRCodeStyling/src/tools/getMode.ts","webpack://QRCodeStyling/src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(this, () => {\nreturn ","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n","import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n","export default function downloadURI(uri: string, name: string): void {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n","import dotTypes from \"../../constants/dotTypes\";\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs, Window } from \"../../types\";\n\nexport default class QRDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: DotType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: DotType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - left bottom and right top corners are rounded\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to left top position\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\n            `h ${size / 2}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n}\n","import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n","import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n","import cornerSquareTypes from \"../../constants/cornerSquareTypes\";\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs, Window } from \"../../types\";\n\nexport const availableCornerSquareTypes = Object.values(cornerSquareTypes);\n\nexport default class QRCornerSquare {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerSquareType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: CornerSquareType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\n            `z` + // Z // Close the outer shape\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\n        );\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` +\n            `v ${size}` +\n            `h ${size}` +\n            `v ${-size}` +\n            `z` +\n            `M ${x + dotSize} ${y + dotSize}` +\n            `h ${size - 2 * dotSize}` +\n            `v ${size - 2 * dotSize}` +\n            `h ${-size + 2 * dotSize}` +\n            `z`\n        );\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y + 2.5 * dotSize}` +\n            `v ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\n            `h ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\n            `h ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\n            `v ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, rotation });\n  }\n}\n","import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;","import cornerDotTypes from \"../../constants/cornerDotTypes\";\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs, Window } from \"../../types\";\n\nexport const availableCornerDotTypes = Object.values(cornerDotTypes);\n\nexport default class QRCornerDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerDotType;\n  _window: Window;\n\n  constructor({ svg, type, window }: { svg: SVGElement; type: CornerDotType; window: Window }) {\n    this._svg = svg;\n    this._type = type;\n    this._window = window;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n}\n","import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n","import { ShapeTypes } from \"../types\";\n\nexport default {\n  square: \"square\",\n  circle: \"circle\"\n} as ShapeTypes;\n","import calculateImageSize from \"../tools/calculateImageSize\";\nimport toDataUrl from \"../tools/toDataUrl\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"../figures/dot/QRDot\";\nimport QRCornerSquare, { availableCornerSquareTypes } from \"../figures/cornerSquare/QRCornerSquare\";\nimport QRCornerDot, { availableCornerDotTypes } from \"../figures/cornerDot/QRCornerDot\";\nimport { RequiredOptions } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport { DotType, QRCode, FilterFunction, Gradient, Window } from \"../types\";\nimport { Image } from \"canvas\";\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRSVG {\n  _window: Window;\n  _element: SVGElement;\n  _defs: SVGElement;\n  _backgroundClipPath?: SVGElement;\n  _dotsClipPath?: SVGElement;\n  _cornersSquareClipPath?: SVGElement;\n  _cornersDotClipPath?: SVGElement;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: HTMLImageElement | Image;\n  _imageUri?: string;\n  _instanceId: number;\n\n  static instanceCount = 0;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions, window: Window) {\n    this._window = window;\n    this._element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this._element.setAttribute(\"width\", String(options.width));\n    this._element.setAttribute(\"height\", String(options.height));\n    this._element.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n    if (!options.dotsOptions.roundSize) {\n      this._element.setAttribute(\"shape-rendering\", \"crispEdges\");\n    }\n    this._element.setAttribute(\"viewBox\", `0 0 ${options.width} ${options.height}`);\n    this._defs = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    this._element.appendChild(this._defs);\n    this._imageUri = options.image;\n    this._instanceId = QRSVG.instanceCount++;\n    this._options = options;\n  }\n\n  get width(): number {\n    return this._options.width;\n  }\n\n  get height(): number {\n    return this._options.height;\n  }\n\n  getElement(): SVGElement {\n    return this._element;\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const realQRSize = this._options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      //We need it to get image size\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.drawBackground();\n    this.drawDots((row: number, col: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          row >= (count - drawImageSize.hideYDots) / 2 &&\n          row < (count + drawImageSize.hideYDots) / 2 &&\n          col >= (count - drawImageSize.hideXDots) / 2 &&\n          col < (count + drawImageSize.hideXDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[row]?.[col] || squareMask[row - count + 7]?.[col] || squareMask[row]?.[col - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[row]?.[col] || dotMask[row - count + 7]?.[col] || dotMask[row]?.[col - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      await this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\n    }\n  }\n\n  drawBackground(): void {\n    const element = this._element;\n    const options = this._options;\n\n    if (element) {\n      const gradientOptions = options.backgroundOptions?.gradient;\n      const color = options.backgroundOptions?.color;\n      let height = options.height;\n      let width = options.width;\n\n      if (gradientOptions || color) {\n        const element = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._backgroundClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        this._backgroundClipPath.setAttribute(\"id\", `clip-path-background-color-${this._instanceId}`);\n        this._defs.appendChild(this._backgroundClipPath);\n\n        if (options.backgroundOptions?.round) {\n          height = width = Math.min(options.width, options.height);\n          element.setAttribute(\"rx\", String((height / 2) * options.backgroundOptions.round));\n        }\n\n        element.setAttribute(\"x\", String(this._roundSize((options.width - width) / 2)));\n        element.setAttribute(\"y\", String(this._roundSize((options.height - height) / 2)));\n        element.setAttribute(\"width\", String(width));\n        element.setAttribute(\"height\", String(height));\n\n        this._backgroundClipPath.appendChild(element);\n\n        this._createColor({\n          options: gradientOptions,\n          color: color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: options.height,\n          width: options.width,\n          name: `background-color-${this._instanceId}`\n        });\n      }\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n    const dot = new QRDot({\n      svg: this._element,\n      type: options.dotsOptions.type,\n      window: this._window\n    });\n\n    this._dotsClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n    this._dotsClipPath.setAttribute(\"id\", `clip-path-dot-color-${this._instanceId}`);\n    this._defs.appendChild(this._dotsClipPath);\n\n    this._createColor({\n      options: options.dotsOptions?.gradient,\n      color: options.dotsOptions.color,\n      additionalRotation: 0,\n      x: 0,\n      y: 0,\n      height: options.height,\n      width: options.width,\n      name: `dot-color-${this._instanceId}`\n    });\n\n    for (let row = 0; row < count; row++) {\n      for (let col = 0; col < count; col++) {\n        if (filter && !filter(row, col)) {\n          continue;\n        }\n        if (!this._qr?.isDark(row, col)) {\n          continue;\n        }\n\n        dot.draw(\n          xBeginning + col * dotSize,\n          yBeginning + row * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (col + xOffset < 0 || row + yOffset < 0 || col + xOffset >= count || row + yOffset >= count) return false;\n            if (filter && !filter(row + yOffset, col + xOffset)) return false;\n            return !!this._qr && this._qr.isDark(row + yOffset, col + xOffset);\n          }\n        );\n\n        if (dot._element && this._dotsClipPath) {\n          this._dotsClipPath.appendChild(dot._element);\n        }\n      }\n    }\n\n    if (options.shape === shapeTypes.circle) {\n      const additionalDots = this._roundSize((minSize / dotSize - count) / 2);\n      const fakeCount = count + additionalDots * 2;\n      const xFakeBeginning = xBeginning - additionalDots * dotSize;\n      const yFakeBeginning = yBeginning - additionalDots * dotSize;\n      const fakeMatrix: number[][] = [];\n      const center = this._roundSize(fakeCount / 2);\n\n      for (let row = 0; row < fakeCount; row++) {\n        fakeMatrix[row] = [];\n        for (let col = 0; col < fakeCount; col++) {\n          if (\n            row >= additionalDots - 1 &&\n            row <= fakeCount - additionalDots &&\n            col >= additionalDots - 1 &&\n            col <= fakeCount - additionalDots\n          ) {\n            fakeMatrix[row][col] = 0;\n            continue;\n          }\n\n          if (Math.sqrt((row - center) * (row - center) + (col - center) * (col - center)) > center) {\n            fakeMatrix[row][col] = 0;\n            continue;\n          }\n\n          //Get random dots from QR code to show it outside of QR code\n          fakeMatrix[row][col] = this._qr.isDark(\n            col - 2 * additionalDots < 0 ? col : col >= count ? col - 2 * additionalDots : col - additionalDots,\n            row - 2 * additionalDots < 0 ? row : row >= count ? row - 2 * additionalDots : row - additionalDots\n          )\n            ? 1\n            : 0;\n        }\n      }\n\n      for (let row = 0; row < fakeCount; row++) {\n        for (let col = 0; col < fakeCount; col++) {\n          if (!fakeMatrix[row][col]) continue;\n\n          dot.draw(\n            xFakeBeginning + col * dotSize,\n            yFakeBeginning + row * dotSize,\n            dotSize,\n            (xOffset: number, yOffset: number): boolean => {\n              return !!fakeMatrix[row + yOffset]?.[col + xOffset];\n            }\n          );\n          if (dot._element && this._dotsClipPath) {\n            this._dotsClipPath.appendChild(dot._element);\n          }\n        }\n      }\n    }\n  }\n\n  drawCorners(): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const element = this._element;\n    const options = this._options;\n\n    if (!element) {\n      throw \"Element code is not defined\";\n    }\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = this._roundSize(realQRSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n      let cornersSquareClipPath = this._dotsClipPath;\n      let cornersDotClipPath = this._dotsClipPath;\n\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\n        cornersSquareClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}-${this._instanceId}`);\n        this._defs.appendChild(cornersSquareClipPath);\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\n\n        this._createColor({\n          options: options.cornersSquareOptions?.gradient,\n          color: options.cornersSquareOptions?.color,\n          additionalRotation: rotation,\n          x,\n          y,\n          height: cornersSquareSize,\n          width: cornersSquareSize,\n          name: `corners-square-color-${column}-${row}-${this._instanceId}`\n        });\n      }\n\n      if (options.cornersSquareOptions?.type && availableCornerSquareTypes.includes(options.cornersSquareOptions.type)) {\n        const cornersSquare = new QRCornerSquare({\n          svg: this._element,\n          type: options.cornersSquareOptions.type,\n          window: this._window\n        });\n\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n\n        if (cornersSquare._element && cornersSquareClipPath) {\n          cornersSquareClipPath.appendChild(cornersSquare._element);\n        }\n      } else {\n        const dot = new QRDot({\n          svg: this._element,\n          type: (options.cornersSquareOptions?.type as DotType) || options.dotsOptions.type,\n          window: this._window\n        });\n\n        for (let row = 0; row < squareMask.length; row++) {\n          for (let col = 0; col < squareMask[row].length; col++) {\n            if (!squareMask[row]?.[col]) {\n              continue;\n            }\n\n            dot.draw(\n              x + col * dotSize,\n              y + row * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[row + yOffset]?.[col + xOffset]\n            );\n\n            if (dot._element && cornersSquareClipPath) {\n              cornersSquareClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\n        cornersDotClipPath = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}-${this._instanceId}`);\n        this._defs.appendChild(cornersDotClipPath);\n        this._cornersDotClipPath = cornersDotClipPath;\n\n        this._createColor({\n          options: options.cornersDotOptions?.gradient,\n          color: options.cornersDotOptions?.color,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          height: cornersDotSize,\n          width: cornersDotSize,\n          name: `corners-dot-color-${column}-${row}-${this._instanceId}`\n        });\n      }\n\n      if (options.cornersDotOptions?.type && availableCornerDotTypes.includes(options.cornersDotOptions.type)) {\n        const cornersDot = new QRCornerDot({\n          svg: this._element,\n          type: options.cornersDotOptions.type,\n          window: this._window\n        });\n\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n\n        if (cornersDot._element && cornersDotClipPath) {\n          cornersDotClipPath.appendChild(cornersDot._element);\n        }\n      } else {\n        const dot = new QRDot({\n          svg: this._element,\n          type: (options.cornersDotOptions?.type as DotType) || options.dotsOptions.type,\n          window: this._window\n        });\n\n        for (let row = 0; row < dotMask.length; row++) {\n          for (let col = 0; col < dotMask[row].length; col++) {\n            if (!dotMask[row]?.[col]) {\n              continue;\n            }\n\n            dot.draw(\n              x + col * dotSize,\n              y + row * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[row + yOffset]?.[col + xOffset]\n            );\n\n            if (dot._element && cornersDotClipPath) {\n              cornersDotClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  loadImage(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const options = this._options;\n\n      if (!options.image) {\n        return reject(\"Image is not defined\");\n      }\n\n      if (options.nodeCanvas?.loadImage) {\n        options.nodeCanvas\n          .loadImage(options.image)\n          .then((image: Image) => {\n            this._image = image;\n            if (this._options.imageOptions.saveAsBlob) {\n              const canvas = options.nodeCanvas?.createCanvas( this._image.width,  this._image.height);\n              canvas?.getContext('2d')?.drawImage(image, 0, 0);\n              this._imageUri = canvas?.toDataURL();\n            }\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        const image = new this._window.Image();\n\n        if (typeof options.imageOptions.crossOrigin === \"string\") {\n          image.crossOrigin = options.imageOptions.crossOrigin;\n        }\n\n        this._image = image;\n        image.onload = async () => {\n          if (this._options.imageOptions.saveAsBlob) {\n            this._imageUri = await toDataUrl(options.image || \"\", this._window);\n          }\n          resolve();\n        };\n        image.src = options.image;\n      }\n    });\n  }\n\n  async drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): Promise<void> {\n    const options = this._options;\n    const xBeginning = this._roundSize((options.width - count * dotSize) / 2);\n    const yBeginning = this._roundSize((options.height - count * dotSize) / 2);\n    const dx = xBeginning + this._roundSize(options.imageOptions.margin + (count * dotSize - width) / 2);\n    const dy = yBeginning + this._roundSize(options.imageOptions.margin + (count * dotSize - height) / 2);\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    const image = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"href\", this._imageUri || \"\");\n    image.setAttribute(\"xlink:href\", this._imageUri || \"\");\n    image.setAttribute(\"x\", String(dx));\n    image.setAttribute(\"y\", String(dy));\n    image.setAttribute(\"width\", `${dw}px`);\n    image.setAttribute(\"height\", `${dh}px`);\n\n    this._element.appendChild(image);\n  }\n\n  _createColor({\n    options,\n    color,\n    additionalRotation,\n    x,\n    y,\n    height,\n    width,\n    name\n  }: {\n    options?: Gradient;\n    color?: string;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    name: string;\n  }): void {\n    const size = width > height ? width : height;\n    const rect = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"height\", String(height));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\n\n    if (options) {\n      let gradient: SVGElement;\n      if (options.type === gradientTypes.radial) {\n        gradient = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"fx\", String(x + width / 2));\n        gradient.setAttribute(\"fy\", String(y + height / 2));\n        gradient.setAttribute(\"cx\", String(x + width / 2));\n        gradient.setAttribute(\"cy\", String(y + height / 2));\n        gradient.setAttribute(\"r\", String(size / 2));\n      } else {\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n        let x0 = x + width / 2;\n        let y0 = y + height / 2;\n        let x1 = x + width / 2;\n        let y1 = y + height / 2;\n\n        if (\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n        ) {\n          x0 = x0 - width / 2;\n          y0 = y0 - (height / 2) * Math.tan(rotation);\n          x1 = x1 + width / 2;\n          y1 = y1 + (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n          y0 = y0 - height / 2;\n          x0 = x0 - width / 2 / Math.tan(rotation);\n          y1 = y1 + height / 2;\n          x1 = x1 + width / 2 / Math.tan(rotation);\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n          x0 = x0 + width / 2;\n          y0 = y0 + (height / 2) * Math.tan(rotation);\n          x1 = x1 - width / 2;\n          y1 = y1 - (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n          y0 = y0 + height / 2;\n          x0 = x0 + width / 2 / Math.tan(rotation);\n          y1 = y1 - height / 2;\n          x1 = x1 - width / 2 / Math.tan(rotation);\n        }\n\n        gradient = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\n      }\n\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        const stop = this._window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\n        stop.setAttribute(\"stop-color\", color);\n        gradient.appendChild(stop);\n      });\n\n      rect.setAttribute(\"fill\", `url('#${name}')`);\n      this._defs.appendChild(gradient);\n    } else if (color) {\n      rect.setAttribute(\"fill\", color);\n    }\n\n    this._element.appendChild(rect);\n  }\n\n  _roundSize = (value: number) => {\n    if (this._options.dotsOptions.roundSize) {\n      return Math.floor(value);\n    }\n    return value;\n  }\n}\n","interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n","import { Window } from \"../types\";\n\nexport default async function toDataURL(url: string, window: Window): Promise<string> {\n  return new Promise((resolve) => {\n    const xhr = new window.XMLHttpRequest();\n    xhr.onload = function () {\n      const reader = new window.FileReader();\n      reader.onloadend = function () {\n        resolve(reader.result as string);\n      };\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n","import { DrawTypes } from \"../types\";\n\nexport default {\n  canvas: \"canvas\",\n  svg: \"svg\"\n} as DrawTypes;\n","import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n","import qrTypes from \"../constants/qrTypes\";\nimport drawTypes from \"../constants/drawTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport { ShapeType, DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\n\nexport interface RequiredOptions extends Options {\n  type: DrawType;\n  shape: ShapeType;\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    saveAsBlob: boolean;\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n    roundSize?: boolean;\n  };\n  backgroundOptions: {\n    round: number;\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  type: drawTypes.canvas,\n  shape: shapeTypes.square,\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    saveAsBlob: true,\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\",\n    roundSize: true,\n  },\n  backgroundOptions: {\n    round: 0,\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n","import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n","import { RequiredOptions } from \"../core/QROptions\";\nimport { Gradient } from \"../types\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n","export default function getMimeType(extension: string) {\n  if (!extension) throw new Error('Extension must be defined');\n  if (extension[0] === \".\") {\n    extension = extension.substring(1);\n  }\n  const type = {\n    \"bmp\": \"image/bmp\",\n    \"gif\": \"image/gif\",\n    \"ico\": \"image/vnd.microsoft.icon\",\n    \"jpeg\": \"image/jpeg\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"svg\": \"image/svg+xml\",\n    \"tif\": \"image/tiff\",\n    \"tiff\": \"image/tiff\",\n    \"webp\": \"image/webp\",\n    \"pdf\": \"application/pdf\",\n  }[extension.toLowerCase()]\n\n  if (!type) {\n    throw new Error(`Extension \"${extension}\" is not supported`);\n  }\n\n  return type;\n}","import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport downloadURI from \"../tools/downloadURI\";\nimport QRSVG from \"./QRSVG\";\nimport drawTypes from \"../constants/drawTypes\";\n\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { FileExtension, QRCode, Options, DownloadOptions, ExtensionFunction, Window } from \"../types\";\nimport qrcode from \"qrcode-generator\";\nimport getMimeType from \"../tools/getMimeType\";\nimport { Canvas as NodeCanvas, Image } from \"canvas\";\n\ndeclare const window: Window;\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _window: Window;\n  _container?: HTMLElement;\n  _domCanvas?: HTMLCanvasElement;\n  _nodeCanvas?: NodeCanvas;\n  _svg?: SVGElement;\n  _qr?: QRCode;\n  _extension?: ExtensionFunction;\n  _canvasDrawingPromise?: Promise<void>;\n  _svgDrawingPromise?: Promise<void>;\n\n  constructor(options?: Partial<Options>) {\n    if (options?.jsdom) {\n      this._window = new options.jsdom(\"\", { resources: \"usable\" }).window;\n    } else {\n      this._window = window;\n    }\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n    this.update();\n  }\n\n  static _clearContainer(container?: HTMLElement): void {\n    if (container) {\n      container.innerHTML = \"\";\n    }\n  }\n\n  _setupSvg(): void {\n    if (!this._qr) {\n      return;\n    }\n    const qrSVG = new QRSVG(this._options, this._window);\n\n    this._svg = qrSVG.getElement();\n    this._svgDrawingPromise = qrSVG.drawQR(this._qr).then(() => {\n      if (!this._svg) return;\n      this._extension?.(qrSVG.getElement(), this._options);\n    });\n  }\n\n  _setupCanvas(): void {\n    if (!this._qr) {\n      return;\n    }\n\n    if (this._options.nodeCanvas?.createCanvas) {\n      this._nodeCanvas = this._options.nodeCanvas.createCanvas(this._options.width, this._options.height);\n      this._nodeCanvas.width = this._options.width;\n      this._nodeCanvas.height = this._options.height;\n    } else {\n      this._domCanvas = document.createElement(\"canvas\");\n      this._domCanvas.width = this._options.width;\n      this._domCanvas.height = this._options.height;\n    }\n\n    this._setupSvg();\n    this._canvasDrawingPromise = this._svgDrawingPromise?.then(() => {\n      if (!this._svg) return;\n\n      const svg = this._svg;\n      const xml = new this._window.XMLSerializer().serializeToString(svg);\n      const svg64 = btoa(xml);\n      const image64 = `data:${getMimeType('svg')};base64,${svg64}`;\n\n      if (this._options.nodeCanvas?.loadImage) {\n        return this._options.nodeCanvas.loadImage(image64).then((image: Image) => {\n          // fix blurry svg\n          image.width = this._options.width;\n          image.height = this._options.height;\n          this._nodeCanvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n        });\n      } else {\n        const image = new this._window.Image();\n\n        return new Promise((resolve) => {\n          image.onload = (): void => {\n            this._domCanvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n            resolve();\n          };\n\n          image.src = image64;\n        });\n      }\n    });\n  }\n\n  async _getElement(extension: FileExtension = \"png\") {\n    if (!this._qr) throw \"QR code is empty\";\n\n    if (extension.toLowerCase() === \"svg\") {\n      if (!this._svg || !this._svgDrawingPromise) {\n        this._setupSvg();\n      }\n      await this._svgDrawingPromise;\n      return this._svg;\n    } else {\n      if (!(this._domCanvas || this._nodeCanvas) || !this._canvasDrawingPromise) {\n        this._setupCanvas();\n      }\n      await this._canvasDrawingPromise;\n      return this._domCanvas || this._nodeCanvas;\n    }\n  }\n\n  update(options?: Partial<Options>): void {\n    QRCodeStyling._clearContainer(this._container);\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      return;\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n\n    if (this._options.type === drawTypes.canvas) {\n      this._setupCanvas();\n    } else {\n      this._setupSvg();\n    }\n\n    this.append(this._container);\n  }\n\n  append(container?: HTMLElement): void {\n    if (!container) {\n      return;\n    }\n\n    if (typeof container.appendChild !== \"function\") {\n      throw \"Container should be a single DOM node\";\n    }\n\n    if (this._options.type === drawTypes.canvas) {\n      if (this._domCanvas) {\n        container.appendChild(this._domCanvas);\n      }\n    } else {\n      if (this._svg) {\n        container.appendChild(this._svg);\n      }\n    }\n\n    this._container = container;\n  }\n\n  applyExtension(extension: ExtensionFunction): void {\n    if (!extension) {\n      throw \"Extension function should be defined.\";\n    }\n\n    this._extension = extension;\n    this.update();\n  }\n\n  deleteExtension(): void {\n    this._extension = undefined;\n    this.update();\n  }\n\n  async getRawData(extension: FileExtension = \"png\"): Promise<Blob | Buffer | null> {\n    if (!this._qr) throw \"QR code is empty\";\n    const element = await this._getElement(extension);\n    const mimeType = getMimeType(extension);\n\n    if (!element) {\n      return null;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new this._window.XMLSerializer();\n      const source = serializer.serializeToString(element as SVGElement);\n      const svgString = `<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n${source}`;\n      if (typeof Blob !== \"undefined\" && !this._options.jsdom) {\n        return new Blob([svgString], { type: mimeType });\n      } else {\n        return Buffer.from(svgString);\n      }\n    } else {\n      return new Promise((resolve) => {\n        const canvas = element;\n        if ('toBuffer' in canvas) {\n          // Different call is needed to prevent error TS2769: No overload matches this call.\n          if (mimeType === \"image/png\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else if (mimeType === \"image/jpeg\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else if (mimeType === \"application/pdf\") {\n            resolve(canvas.toBuffer(mimeType));\n          } else {\n            throw Error(\"Unsupported extension\");\n          }\n        } else if ('toBlob' in canvas) {\n          (canvas).toBlob(resolve, mimeType, 1);\n        }\n      });\n    }\n  }\n\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\n    if (!this._qr) throw \"QR code is empty\";\n    if (typeof Blob === \"undefined\") throw \"Cannot download in Node.js, call getRawData instead.\";\n    let extension = \"png\" as FileExtension;\n    let name = \"qr\";\n\n    //TODO remove deprecated code in the v2\n    if (typeof downloadOptions === \"string\") {\n      extension = downloadOptions as FileExtension;\n      console.warn(\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\n      );\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\n      if (downloadOptions.name) {\n        name = downloadOptions.name;\n      }\n      if (downloadOptions.extension) {\n        extension = downloadOptions.extension;\n      }\n    }\n\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      let source = serializer.serializeToString(element as SVGElement);\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n      const url = `data:${getMimeType(extension)};charset=utf-8,${encodeURIComponent(source)}`;\n      downloadURI(url, `${name}.svg`);\n    } else {\n      const url = (element as HTMLCanvasElement).toDataURL(getMimeType(extension));\n      downloadURI(url, `${name}.${extension}`);\n    }\n  }\n}\n","import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n","import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\nimport drawTypes from \"./constants/drawTypes\";\nimport shapeTypes from \"./constants/shapeTypes\";\nimport gradientTypes from \"./constants/gradientTypes\";\n\nexport * from \"./types\";\n\nexport {\n  dotTypes,\n  cornerDotTypes,\n  cornerSquareTypes,\n  errorCorrectionLevels,\n  errorCorrectionPercents,\n  modes,\n  qrTypes,\n  drawTypes,\n  shapeTypes,\n  gradientTypes\n};\n\nexport default QRCodeStyling;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}